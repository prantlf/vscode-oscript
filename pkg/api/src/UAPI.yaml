-
  id: ANY
  type: Property
  synopsis: 'UAPI.ANY: Integer'
  comment: |-
    Any user or group type. Used as the searchType parameter to
    UAPI.PowerList() and as the typeMembership parameter to
    UAPI.MembershipListByID().
-
  id: CONTAINS
  type: Property
  synopsis: 'UAPI.CONTAINS: Integer'
  comment: |-
    Search using the "Contains" operator. Used as the searchOpr
    parameter to UAPI.PowerList().
-
  id: ENDSWITH
  type: Property
  synopsis: 'UAPI.ENDSWITH: Integer'
  comment: |-
    Search using the "Endswith" operator. Used as the searchOpr
    parameter to UAPI.PowerList().
-
  id: FACTORY
  type: Property
  synopsis: 'UAPI.FACTORY: Integer'
  comment: |-
    Object factory group (excluded from rights) type.
-
  id: FIRSTNAME
  type: Property
  synopsis: 'UAPI.FIRSTNAME: Integer'
  comment: |-
    Search by first name.  Used as the searchColumn parameter to
    UAPI.PowerList().
-
  id: GROUP
  type: Property
  synopsis: 'UAPI.GROUP: Integer'
  comment: |-
    Group type.
-
  id: LASTNAME
  type: Property
  synopsis: 'UAPI.LASTNAME: Integer'
  comment: |-
    Search by last name. Used as the searchColumn parameter to
    UAPI.PowerList().
-
  id: MAILADDRESS
  type: Property
  synopsis: 'UAPI.MAILADDRESS: Integer'
  comment: |-
    Search by mail address. Used as the searchColumn parameter to
    UAPI.PowerList().
-
  id: NAME
  type: Property
  synopsis: 'UAPI.NAME: Integer'
  comment: |-
    Search by name. Used as the searchColumn parameter to
    UAPI.PowerList().
-
  id: NEXT
  type: Property
  synopsis: 'UAPI.NEXT: Integer'
  comment: |-
    Do a next/forward search. Used as the action parameter to
    UAPI.PowerList().
-
  id: PREVIOUS
  type: Property
  synopsis: 'UAPI.PREVIOUS: Integer'
  comment: |-
    Do a next/backward search. Used as the action parameter to
    UAPI.PowerList().
-
  id: PRIVATEGROUP
  type: Property
  synopsis: 'UAPI.PRIVATEGROUP: Integer'
  comment: |-
    Deprecated.
-
  id: PRIVATEPROJECT
  type: Property
  synopsis: 'UAPI.PRIVATEPROJECT: Integer'
  comment: |-
    Deprecated.
-
  id: PRIV_DAPI_SESSION
  type: Property
  synopsis: 'UAPI.PRIV_DAPI_SESSION: Integer'
  comment: |-
    Can connect to the document database.
-
  id: PRIV_LOGIN
  type: Property
  synopsis: 'UAPI.PRIV_LOGIN: Integer'
  comment: |-
    Can log in.
-
  id: PRIV_PERM_BYPASS
  type: Property
  synopsis: 'UAPI.PRIV_PERM_BYPASS: Integer'
  comment: |-
    Can access the document database without permission
    checking.
-
  id: PRIV_PERM_SYSTEM
  type: Property
  synopsis: 'UAPI.PRIV_PERM_SYSTEM: Integer'
  comment: |-
    Has system permissions in the document database.
-
  id: PRIV_PERM_WORLD
  type: Property
  synopsis: 'UAPI.PRIV_PERM_WORLD: Integer'
  comment: |-
    Has world permissions in the document database.
-
  id: PRIV_UAPI_ADMIN
  type: Property
  synopsis: 'UAPI.PRIV_UAPI_ADMIN: Integer'
  comment: |-
    Has user and group administrator privileges.
-
  id: PRIV_UAPI_GROUPS
  type: Property
  synopsis: 'UAPI.PRIV_UAPI_GROUPS: Integer'
  comment: |-
    Can create public groups.
-
  id: PRIV_UAPI_MANAGER
  type: Property
  synopsis: 'UAPI.PRIV_UAPI_MANAGER: Integer'
  comment: |-
    Deprecated.
-
  id: PRIV_UAPI_PROJECTS
  type: Property
  synopsis: 'UAPI.PRIV_UAPI_PROJECTS: Integer'
  comment: |-
    Deprecated.
-
  id: PRIV_UAPI_SESSION
  type: Property
  synopsis: 'UAPI.PRIV_UAPI_SESSION: Integer'
  comment: |-
    Can connect to the user database.
-
  id: PRIV_UAPI_USERS
  type: Property
  synopsis: 'UAPI.PRIV_UAPI_USERS: Integer'
  comment: |-
    Can create users.
-
  id: PRIV_WAPI_BYPASS
  type: Property
  synopsis: 'UAPI.PRIV_WAPI_BYPASS: Integer'
  comment: |-
    Can access the workflow database without permission checking
-
  id: PRIV_WAPI_SESSION
  type: Property
  synopsis: 'UAPI.PRIV_WAPI_SESSION: Integer'
  comment: |-
    Can connect to the workflow database.
-
  id: PROJECT
  type: Property
  synopsis: 'UAPI.PROJECT: Integer'
  comment: |-
    Deprecated.
-
  id: PROXY_DAPI
  type: Property
  synopsis: 'UAPI.PROXY_DAPI: Integer'
  comment: |-
    Proxy for DAPI.
-
  id: PROXY_NONE
  type: Property
  synopsis: 'UAPI.PROXY_NONE: Integer'
  comment: |-
    No proxy.
-
  id: PROXY_WAPI
  type: Property
  synopsis: 'UAPI.PROXY_WAPI: Integer'
  comment: |-
    Proxy for WAPI.
-
  id: RIGHTID_SYSTEM
  type: Property
  synopsis: 'UAPI.RIGHTID_SYSTEM: Integer'
  comment: |-
    Right ID represent system.
-
  id: RIGHTID_WORLD
  type: Property
  synopsis: 'UAPI.RIGHTID_WORLD: Integer'
  comment: |-
    Right ID represent world.
-
  id: SOUNDSLIKE
  type: Property
  synopsis: 'UAPI.SOUNDSLIKE: Integer'
  comment: |-
    Search using the "SoundsLike" operator. Used as the searchOpr
    parameter to UAPI.PowerList().
-
  id: STARTSWITH
  type: Property
  synopsis: 'UAPI.STARTSWITH: Integer'
  comment: |-
    Search using the "Startswith" operator. Used as the searchOpr
    parameter to UAPI.PowerList().
-
  id: SYSTEM
  type: Property
  synopsis: 'UAPI.SYSTEM: Integer'
  comment: |-
    System type. Used as the targetType parameter to
    UAPI.PowerList().
-
  id: USER
  type: Property
  synopsis: 'UAPI.USER: Integer'
  comment: |-
    User type.
-
  id: Add
  type: Method
  synopsis: 'UAPI.Add(UAPISESSION session, Integer groupType, String groupName, [Integer leaderID = 0], [Dynamic groupData = UNDEFINED]): Integer'
  comment: |-
    Deprecated.

    **Parameters**:
      session: The UAPISession through which the group will be
               added.
      groupType: The UAPI type.
      groupName: The name of the new group to add.
      leaderID: An Integer user ID identifying the leader of the
                group.
      groupData: Any additional value to store in the database as
                 part of the user or group identity. If more than
                 one value needs to be stored, specify a List.

    **Result**:
      The ID of the new group if successful, error otherwise.
-
  id: AddTo
  type: Method
  synopsis: 'UAPI.AddTo(UAPISESSION session, Integer newType, String newName, Integer typeTo, String nameTo): Integer'
  comment: |-
    Deprecated.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      newType: The UAPI type of the user or group being added.
      newName: The name of the existing user or group to add.
      typeTo: The UAPI type of the group to which the user or group
              specified by newType and newName will be added.
      nameTo: The name of the group to which the user or group
              specified by the newType and newName will be
              added.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: AddToByIDs
  type: Method
  synopsis: 'UAPI.AddToByIDs(UAPISESSION session, Integer childID, Integer parentID): Integer'
  comment: |-
    Adds a user or a group to a group by specifying their IDs.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      childID: The id of the user or group being added.
      parentID: The id of the group to which the user or group
                specified by childID will be added.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: AddUser
  type: Method
  synopsis: 'UAPI.AddUser(UAPISESSION session, String name, String password, Integer baseType, String baseName, Integer privileges, [Dynamic userData = UNDEFINED]): Integer'
  comment: |-
    Deprecated.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      name: The name of the user to add to the database.
      password: The password for the user account. If no password
                should be associated with the user, specify a null
                String.
      baseType: The UAPI type of the base group to which the user
                will belong.
      baseName: The name of the base group to which the user will
                belong.
      privileges: One or more of the user privilege constants, joined
                  by bitwise OR operators ( | ).
      userData: Any additional value to store in the database as part
                of the user's identity. If more than one value needs
                to be stored, specify a List.

    **Result**:
      The ID of the new user if successful, error otherwise.
-
  id: AddUserProxyByID
  type: Method
  synopsis: 'UAPI.AddUserProxyByID(UAPISESSION session, Integer userID, Integer proxyID, Integer proxyType): Integer'
  comment: |-
    Adds a user proxy.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      userID: The id of the user.
      proxyID: The id of the proxy.
      proxyType: The proxy type.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: AllocEx
  type: Method
  synopsis: 'UAPI.AllocEx(UAPISESSION session): UAPIUSER'
  comment: |-
    Creates an extended handle.

    **Parameters**:
      session: The UAPISession through which the extended attributes
               object will be allocated.

    **Result**:
      A UAPIUser providing an extended attributes handle.
-
  id: AllocSession
  type: Method
  synopsis: 'UAPI.AllocSession(CAPILOGIN llConn): UAPISESSION'
  comment: |-
    Creates a UAPI session.

    **Parameters**:
      llConn: Specifies a CAPILOGIN referring to the Livelink user's
              connection to a database.

    **Result**:
      If successful, a UAPISession associating a user with a database
      connection, otherwise UAPI.KUAF_BADPRIVS if the user
      associated with session does not have enough privileges to
      allocate UAPI session.
-
  id: CheckAddPrivs
  type: Method
  synopsis: 'UAPI.CheckAddPrivs(UAPISESSION session, Integer theType): Integer'
  comment: |-
    Determines whether or not users or groups can be added to the
    database through the specified UAPISession.

    **Parameters**:
      session: The UAPISession through which associated user's
               privileges will be determined.
      theType: The UAPI type (either UAPI.USER or UAPI.GROUP) for
               which addition privileges are checked.

    **Result**:
      The Integer 0 if successful and addition is permitted; error
      otherwise.
-
  id: CheckAlterPrivs
  type: Method
  synopsis: 'UAPI.CheckAlterPrivs(UAPISESSION session, Record identifier): Integer'
  comment: |-
    Determines whether or not a particular user or group can be
    modified through a given session.

    **Parameters**:
      session: The UAPISession used to identify the user whose
               modification privileges will be determined.
      identifier: A Record for a user or group, identifying a
                  particular user or group for which modification
                  privileges will be determined.

    **Result**:
      The Integer 0 if successful and alteration is permitted, error
      otherwise.
-
  id: ChildrenList
  type: Method
  synopsis: 'UAPI.ChildrenList(UAPISESSION session, Integer groupType, String groupName): RecArray'
  comment: |-
    Deprecated.

    **Parameters**:
      session: The UAPISession through which the information is
               retrieved.
      groupType: The UAPI type of the group on which to operate.
      groupName: The name of the group whose children will be
                 listed.

    **Result**:
      A RecArray containing records of users and groups if
      successful, error otherwise.
-
  id: ChildrenListByID
  type: Method
  synopsis: 'UAPI.ChildrenListByID(UAPISESSION session, Integer groupID): RecArray'
  comment: |-
    Returns records of child members of the specified group.

    **Parameters**:
      session: The UAPISession through which the information is
               retrieved.
      groupID: The Integer UAPI ID of the group on which to
               operate.

    **Result**:
      A RecArray containing records of users and groups if
      successful, error otherwise.
-
  id: Create
  type: Method
  synopsis: 'UAPI.Create(UAPISESSION session, Integer groupType, Integer spaceID, String groupName, [Integer leaderID = 0], [Dynamic groupData = UNDEFINED]): Integer'
  comment: |-
    Creates a new group in the database.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      groupType: The group type.
      spaceID: The ID of a space.
      groupName: The name of the new group to add.
      leaderID: An Integer user ID identifying the leader of the
                group.
      groupData: Any additional value to store in the database as
                 part of the user or group identity. If more than
                 one value needs to be stored, specify a List.

    **Result**:
      The ID of the created group if successful, error
      otherwise.
-
  id: CreateUser
  type: Method
  synopsis: 'UAPI.CreateUser(UAPISESSION session, String name, String password, Integer groupID, integer spaceID, Integer privileges, [Dynamic userData = UNDEFINED]): Integer'
  comment: |-
    Creates a new user in the database.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      name: The name of the user to add to the database.
      password: The password for the user account. If no password
                should be associated with the user, specify a null
                String.
      groupID: The ID of the base group to which the user will
               belong.
      spaceID: The ID of the space to which the user will
               belong.
      privileges: One or more of the user privilege constants, joined
                  by bitwise OR operators ( | ).
      userData: Any additional value to store in the database as part
                of the user's identity. If more than one value needs
                to be stored, specify a List.

    **Result**:
      The ID of the created user if successful, error otherwise.
-
  id: Delete
  type: Method
  synopsis: 'UAPI.Delete(UAPISESSION session, Integer groupType, String groupName, [Integer remove = 0]): Integer'
  comment: |-
    Deprecated. This function assumes it operates in the standard
    space (with spaceID of 0).

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      groupType: The Integer UAPI type of the group to delete.
      groupName: The String name of the group to delete.
      remove: 1 - remove from database, 0 - default, mark as deleted
              in database.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: DeleteByID
  type: Method
  synopsis: 'UAPI.DeleteByID(UAPISESSION session, Integer groupID, [Integer remove = 0]): Integer'
  comment: |-
    Deletes a group from the system. If the parameter remove is 0,
    the group is marked as deleted in the database (the group row is
    not deleted), otherwise the group is deleted from the database.
    The following is performed upon a group deletion: The deleted
    group is renamed, so the name from the deleted group may be
    reused. The deleted group is automatically removed from any
    other group or project of which it was formerly a member. If the
    group deleted is a user's base group, that user's base group is
    reset to the default group.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      groupID: The ID of the group to delete.
      remove: 1 - remove from database, 0 - default, mark as deleted
              in database.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: DeleteFrom
  type: Method
  synopsis: 'UAPI.DeleteFrom(UAPISESSION session, Integer newType, String newName,               Integer typeFrom, String nameFrom): Integer'
  comment: |-
    Deprecated.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      delType: The Integer UAPI type of the user or group being
               removed.
      delName: The String name of the existing user or group to
               remove.
      typeFrom: The Integer UAPI type of the group from which the
                user or group specified by the delType and delName
                parameters will be removed.
      nameFrom: The String name of the group from which the user or
                group specified by the delType and delName
                parameters will be removed.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: DeleteFromByIDs
  type: Method
  synopsis: 'UAPI.DeleteFromByIDs(UAPISESSION session, Integer childID, Integer parentID): Integer'
  comment: |-
    Removes a user or group from the specified group.

    **Parameters**:
      session: The UAPISession through which the modification is
               made
      childID: The id of the user or group being removed.
      parentID: The id of the group from which the user or group
                specified by childID will be removed.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: DeleteUser
  type: Method
  synopsis: 'UAPI.DeleteUser(UAPISESSION session, String userName): Integer'
  comment: |-
    Deprecated. This function assumes it operates in the standard
    space (with spaceID of 0).

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      userName: The String name of the user to delete.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: DeleteUserByID
  type: Method
  synopsis: 'UAPI.DeleteUserByID(UAPISESSION session, Integer userID): Integer'
  comment: |-
    Deletes the specified user from the system. When a user is
    deleted, the following is done: The user is marked as deleted in
    the database (the user row is not deleted). The deleted user is
    renamed, so the name of the deleted user may be reused. The
    deleted user is automatically removed from any other group or
    project of which it was a member. If the deleted user leads any
    groups, their leaderID is updated to undefined. The user
    specified by the UAPISession must have modification privileges
    (verify using UAPI.CheckAlterPrivs()) to successfully execute
    this function.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      userID: The ID of the user to delete.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: DeleteUserProxyByID
  type: Method
  synopsis: 'UAPI.DeleteUserProxyByID(UAPISESSION session, Integer userID, Integer proxyType): Integer'
  comment: |-
    Deletes a user proxy.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      userID: The id of the user.
      proxyType: The proxy type.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: ExGet
  type: Method
  synopsis: 'UAPI.ExGet(UAPIUSER attribs, String userName): RecArray'
  comment: |-
    Deprecated. This function assumes it operates in the standard
    space (with spaceID of 0).

    **Parameters**:
      attribs: Specifies a UAPIUser, as allocated by UAPI.AllocEx(),
               in which the extended attributes are stored.
      userName: The String name of the user whose extended attributes
                are retrieved.

    **Result**:
      A RecArray containing one Record, in which the extended
      attributes for the specified user are stored. The format of
      the Record will depend upon the structure of the user Record,
      but will contain one field for each attribute. If no extended
      attributes have been stored for the specified user, an empty
      RecArray is returned. An Error will be returned if the
      function does not complete successfully.
-
  id: ExGetByID
  type: Method
  synopsis: 'UAPI.ExGetByID(UAPIUSER attribs, Integer userID): RecArray'
  comment: |-
    Associates an UAPIUser with a user and retrieves any existing
    extended attribute data. The user specified by the UAPISession
    must have modification privileges (verify using
    UAPI.CheckAlterPrivs()) to successfully execute this function.
    See UAPI.AllocEx() for a summary of various extended attributes
    functions. **Parameters**: attribs - Specifies a UAPIUser, as
    allocated by UAPI.AllocEx(), in which the extended attributes
    are stored. userID - The ID of the user whose extended
    attributes are retrieved. Returns: A RecArray containing one
    Record, in which the extended attributes for the specified user
    are stored. The format of the Record will depend upon the
    structure of the user Record, but will contain one field for
    each attribute. If no extended attributes have been stored for
    the specified user, an empty RecArray is returned. An Error will
    be returned if the function does not complete successfully.
    Expand Integer Expand( UAPISESSION session, RecArray
    theRecArray, String columnName ) Adds user information columns
    to a RecArray containing a user ID column.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      theRecArray: The RecArray upon which to operate. It must
                   contain a user ID column.
      columnName: The String name of the column that contains the
                  user IDs. The name specified will be used when
                  naming the newly added columns.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: ExpandEx
  type: Method
  synopsis: 'UAPI.ExpandEx(UAPISESSION session, RecArray theRecArray, String columnName): RecArray'
  comment: |-
    Adds user information columns to a RecArray containing a user ID
    column.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      theRecArray: The RecArray upon which to operate. It must
                   contain a user ID column.
      columnName: The String name of the column that contains the
                  user IDs. The name specified will be used when
                  naming the newly added columns.

    **Result**:
      The passed in RecArray with expanded columns if successful,
      error otherwise.
-
  id: ExpandList
  type: Method
  synopsis: 'UAPI.ExpandList(UAPISESSION session, RecArray theRecArray, List columnName): Integer'
  comment: |-
    Adds user information columns to a RecArray containing a user ID
    column.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      theRecArray: The RecArray upon which to operate. It must
                   contain one or more user ID columns.
      columnName: A List of column names containing the user
                  IDs.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: ExSet
  type: Method
  synopsis: 'UAPI.ExSet(UAPIUSER attribs, String name, Dynamic value): Integer'
  comment: |-
    Adds a new extended attribute to the specified extended attribute
    handle. See UAPI.AllocEx() for a summary of the various extended
    attributes functions. Unlike the optional userData parameter on
    UAPI.Create(), extended attributes cannot simply be stored as
    part of a user Record without any preplanning.

    **Parameters**:
      attribs: Specifies a UAPIUser, as allocated by UAPI.AllocEx(),
               in which the extended attributes are stored.
      name: The String name of the attribute to be stored. It must be
            case-sensitively identical to a column name in the kUAF
            table. This will also be the name used as the column
            heading in the RecArray returned by UAPI.ExGetByID()
            when retrieving the extended attribute values.
      value: Specifies the value to be stored, which can be of any
             data type.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: ExUpdate
  type: Method
  synopsis: 'UAPI.ExUpdate(UAPIUSER attribs): Integer'
  comment: |-
    Stores the specified extended attribute data to the
    database.

    **Parameters**:
      attribs: Specifies a UAPIUser, as allocated by UAPI.AllocEx(),
               in which the extended attributes are stored.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: Explode
  type: Method
  synopsis: 'UAPI.Explode(UAPISESSION session, List explodeList): RecArray'
  comment: |-
    Explodes a list of ids into a complete membership.

    **Parameters**:
      session: The UAPISession through which the information is
               retrieved.
      explodeList: The datatype List containing the IDs of the groups
                   to be exploded.

    **Result**:
      A RecArray containing one record for each user or group that is
      a child (member) of the groups specified in the parameter
      explodeList.
-
  id: FreeEx
  type: Method
  synopsis: 'UAPI.FreeEx(UAPIUSER attribs): Integer'
  comment: |-
    Deprecated.

    **Parameters**:
      attribs: Specifies a UAPIUser, as returned by
               UAPI.AllocEx()

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: FreeSession
  type: Method
  synopsis: 'UAPI.FreeSession(UAPISESSION session): Integer'
  comment: |-
    Deprecated.

    **Parameters**:
      session: The UAPISession to terminate.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: Get
  type: Method
  synopsis: 'UAPI.Get(UAPISESSION session, Integer theType, String name): RecArray'
  comment: |-
    Deprecated.

    **Parameters**:
      session: The UAPISession through which the information is
               retrieved.
      theType: The UAPI type of the group or user for which
               information will be returned.
      name: The name of the group or user for which information will
            be returned.

    **Result**:
      A RecArray containing only one record for the user or group if
      successful, error otherwise.
-
  id: GetByID
  type: Method
  synopsis: 'UAPI.GetByID(UAPISESSION session, Integer ID): RecArray'
  comment: |-
    Returns a RecArray containing the information of the specified
    user or group.

    **Parameters**:
      session: The UAPISession through which the information is
               retrieved.
      ID: The user or group ID.

    **Result**:
      A RecArray containing only one record for the user or group if
      successful, error otherwise.
-
  id: GetUser
  type: Method
  synopsis: 'UAPI.GetUser(UAPISESSION session, String userName): RecArray'
  comment: |-
    Deprecated.

    **Parameters**:
      session: The UAPISession through which the information is
               retrieved.
      userName: The name of the user for which the information is
                retrieved.

    **Result**:
      A RecArray containing only one record for the specified user if
      successful, error otherwise.
-
  id: GetUserByID
  type: Method
  synopsis: 'UAPI.GetUserByID(UAPISESSION session, Integer ID): RecArray'
  comment: |-
    Returns a RecArray containing detailed information of the
    specified user.

    **Parameters**:
      session: The UAPISession through which the information is
               retrieved.
      ID: The UAPI ID of the user for which the information is
          retrieved.

    **Result**:
      A RecArray containing only one record for the specified user if
      successful, error otherwise.
-
  id: GetUserLanguage
  type: Method
  synopsis: 'UAPI.GetUserLanguage(CAPILOGIN login): Dynamic'
  comment: |-
    Get the user's preferred metadata language.

    **Parameters**:
      login: The CAPILogin through which the information is
             retrieved.

    **Result**:
      A string representing the language code if successful, error
      otherwise.
-
  id: GetUILanguageByUserID
  type: Method
  synopsis: 'UAPI.GetUILanguageByUserID(CAPICONNECT connection, Integer ID): String'
  comment: |-
    Get the user's user interface language given their user ID.

    **Parameters**:
      connection: The CAPIConnect through which the information is
                  retrieved.
      ID: The ID of the user to get the information for.

    **Result**:
      A string representing the language code if successful,
      undefined if none specified, error otherwise.
-
  id: LeaderList
  type: Method
  synopsis: 'UAPI.LeaderList(UAPISESSION session, Integer ID): RecArray'
  comment: |-
    Determines which users and groups the specified user or group
    leads.

    **Parameters**:
      session: The UAPISession through which the information is
               retrieved.
      ID: The ID of the user or group for which the leader List will
          be obtained.

    **Result**:
      A RecArray containing one record for each user or group for
      which the specified user or group is the leader.
-
  id: List
  type: Method
  synopsis: 'UAPI.List(UAPISESSION session, Integer theType, [Integer spaceID = 0]): RecArray'
  comment: |-
    Lists all users or groups of the specified type in the specified
    space.

    **Parameters**:
      session: The UAPISession through which the information is
               retrieved.
      theType: The UAPI type.
      spaceID: The id of the space. The default is 0 for standard
               user and group.

    **Result**:
      A RecArray containing records of users or groups if successful,
      error otherwise.
-
  id: ListUserProxysByID
  type: Method
  synopsis: 'UAPI.ListUserProxysByID(UAPISESSION session, Integer userID): RecArray'
  comment: |-
    Lists the proxies for the specified user.

    **Parameters**:
      session: The UAPISession through which the information is
               retrieved.
      userID: The ID of the user.

    **Result**:
      A RecArray containing records of users or groups if successful,
      error otherwise.
-
  id: MembershipList
  type: Method
  synopsis: 'UAPI.MembershipList(UAPISESSION session, Integer memberType, String memberName, Integer groupType): RecArray'
  comment: |-
    Deprecated.

    **Parameters**:
      session: The UAPISession through which the information is
               retrieved.
      memberType: The UAPI type of the user or group.
      memberName: The name of the user or group.
      groupType: The UAPI type, for which membership information will
                 be returned.

    **Result**:
      A RecArray containing one record for each group (of the
      specified type) of which the user or group is a member if
      successful, error otherwise.
-
  id: MembershipListByID
  type: Method
  synopsis: 'UAPI.MembershipListByID(UAPISESSION session, Integer memberID, Integer groupType): RecArray'
  comment: |-
    Lists all groups (of a particular type) of which the specified
    user or group is a direct member.

    **Parameters**:
      session: The UAPISession through which the information is
               retrieved.
      memberID: The ID of the user or group.
      groupType: The type, for which membership information will be
                 returned.

    **Result**:
      A RecArray containing one record for each group (of the
      specified type) of which the user or group is a member if
      successful, error otherwise.
-
  id: PowerList
  type: Method
  synopsis: 'UAPI.PowerList(UAPISESSION session, Integer targetType, Integer searchType, String searchValue, Integer action, Integer nRows, Integer searchColumn, Integer searchOpr, Integer startID, String startValue, [Integer groupID = -1], [Integer spaceID = 0]): RecArray'
  comment: |-
    Returns a RecArray containing information about the set of users
    and groups within the specified group in the specified space
    that match the specified search criteria.

    **Parameters**:
      session: The UAPISession through which the information is
               retrieved.
      targetType: The type of group in which to search in;
                  UAPI.SYSTEM to search in the entire system, or
                  UAPI.GROUP to search only in the group specified
                  by the groupID parameter.
      searchType: The UAPI type to return; UAPI.USER to return users
                  only, UAPI.GROUP to return groups only, or
                  UAPI.ANY to return both users and groups.
      searchValue: The value which the parameter searchColumn will be
                   compared against.
      action: The direction in which to search in; UAPI.NEXT or
              UAPI.PREVIOUS.
      nRows: The maximum number of records to return.
      searchColumn: The column to compare; specify UAPI.NAME,
                    UAPI.LASTNAME, UAPI.FIRSTNAME, or
                    UAPI.MAILADDRESS.
      searchOpr: The operator defining the type of comparison made;
                 specify UAPI.STARTSWITH, UAPI.CONTAINS,
                 UAPI.ENDSWITH, or UAPI.SOUNDSLIKE.
      startID: The user or group ID to begin the search. Specify 0
               only if the parameter startValue is an empty string
               or the parameter searchColumn is not UAPI.NAME.
      startValue: The value to begin the search. Specify an empty
                  string only if the first set of records is to be
                  returned.
      groupID: The group ID to search in. It is unused if the
               parameter targetType is UAPI.SYSTEM.
      spaceID: The space ID to search in. The default is 0 for
               standard user or group.

    **Result**:
      A RecArray containing records of users and/or groups that
      satisfied the specified query criteria if successful, error
      otherwise.
-
  id: PrefsDelete
  type: Method
  synopsis: 'UAPI.PrefsDelete(UAPISESSION session, Integer ID, [String keyword = '']): Integer'
  comment: |-
    Deletes a specified user preference keyword or all of the user
    preference keywords.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      ID: User ID for whom the preferences is deleted.
      keyword: If unspecified, deletes all preferences related to the
               user specified in the parameter ID.  Otherwise,
               specify a string naming a keyword matching the
               particular preference to be deleted.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: PrefsGet
  type: Method
  synopsis: 'UAPI.PrefsGet(UAPISESSION session, Integer ID, String keyword, [Dynamic dftValue = UNDEFINED]): Dynamic'
  comment: |-
    Retrieves a specified user preference value for a given
    keyword.

    **Parameters**:
      session: The UAPISession through which the information is
               retrieved.
      ID: User ID for whom a particular preference keyword is
          retrieved.
      keyword: The String keyword of the preference to retrieve.
      dftValue: Optional.  If specified, then this is the value to be
                returned if the specified user preference's keyword
                is not found, otherwise Undefined will be returned
                in such a case.

    **Result**:
      The specified keyword's stored value if successful, error
      otherwise.
-
  id: PrefsList
  type: Method
  synopsis: 'UAPI.PrefsList(UAPISESSION session, Integer ID, [String keyword = '']): RecArray'
  comment: |-
    Lists either all user preference keywords or the value of a
    specified user's preference keyword.

    **Parameters**:
      session: The UAPISession through which the information is
               retrieved.
      ID: User ID for whom the user preference keywords are
          listed.
      keyword: Optional.  If unspecified, lists all preferences
               related to the user specified in the parameter ID.
               Otherwise, specify a string keyword to list that
               preference's stored value for that keyword.

    **Result**:
      A RecArray containing one Record for each preferences keyword
      if successful, error otherwise
-
  id: PrefsPut
  type: Method
  synopsis: 'UAPI.PrefsPut(UAPISESSION session, Integer ID, String keyword, [Dynamic value = UNDEFINED]): Integer'
  comment: |-
    Updates the value for an existing user preference keyword or adds
    a new user preference keyword for the specified user.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      ID: User ID for whom a particular preference keyword is to be
          updated.
      keyword: The keyword of the preference to set/update.
      value: The new stored value if specified, otherwise
             undefined.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: Rename
  type: Method
  synopsis: 'UAPI.Rename(UAPISESSION session, Integer theType, String currentName, String newName): Integer'
  comment: |-
    Deprecated.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      theType: The UAPI type of the user or group to rename.
      currentName: The name of the user or group to rename.
      newName: The new name for the user or group.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: RenameByID
  type: Method
  synopsis: 'UAPI.RenameByID(UAPISESSION session, Integer ID, String newName): Integer'
  comment: |-
    Renames a user or group.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      ID: The ID of the user or group to rename.
      newName: The new name for the user or group.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: RightsList
  type: Method
  synopsis: 'UAPI.RightsList(UAPISESSION session, Integer theType, String name, [Integer proxyType = UAPI.PROXY_NONE]): RecArray'
  comment: |-
    Deprecated.

    **Parameters**:
      session: The UAPISession through which the information is
               retrieved.
      theType: The UAPI type of the user or group for whom membership
               information is returned.
      name: The name of the user or group for which membership
            information is returned.
      proxyType: The proxy type.

    **Result**:
      A RecArray containing one record for each group the user or
      group is a member of if successful, error otherwise.
-
  id: RightsListByID
  type: Method
  synopsis: 'UAPI.RightsListByID(UAPISESSION session, Integer ID, [Integer proxyType = UAPI.PROXY_NONE]): RecArray'
  comment: |-
    Returns a List of all groups of which the specified ID is a
    member (directly and indirectly).

    **Parameters**:
      session: The UAPISession through which the information is
               retrieved.
      ID: The ID of the user or group for whom membership is
          returned.
      proxyType: The proxy type.

    **Result**:
      A RecArray containing one record for each group the user or
      group is a member of if successful, error otherwise.
-
  id: SetLeader
  type: Method
  synopsis: 'UAPI.SetLeader(UAPISESSION session, Integer theType, String name, Integer ID): Integer'
  comment: |-
    Deprecated.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      theType: The UAPI type of the group whose leader will be
               changed.
      name: The name of the group whose leader will be changed.
      ID: The user or group ID of the new leader.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: SetLeaderByID
  type: Method
  synopsis: 'UAPI.SetLeaderByID(UAPISESSION session, Integer groupID, Integer ID): Integer'
  comment: |-
    Changes the leader of a group.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      groupID: The ID of the group whose leader will be changed.
      ID: The user or group ID of the new leader.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: SetOwner
  type: Method
  synopsis: 'UAPI.SetOwner(UAPISESSION session, Integer theType, String name, Integer ownerID): Integer'
  comment: |-
    Deprecated.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      theType: The UAPI type of the user or group whose owner will be
               changed.
      name: The name of the user or group whose owner will be
            changed.
      ownerID: The user or group ID of the new owner.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: SetOwnerByID
  type: Method
  synopsis: 'UAPI.SetOwnerByID(UAPISESSION session, Integer ID, Integer ownerID): Integer'
  comment: |-
    Changes the owner of a user or group.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      ID: The ID the user or group whose owner will be changed.
      ownerID: The user or group ID of the new owner.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: SetPWDExpireDateByID
  type: Method
  synopsis: 'UAPI.SetPWDExpireDateByID(UAPISESSION session, Integer userID, Date expirationDate): Integer'
  comment: |-
    Changes the password expiration date for a user.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      userID: The ID the user.
      expirationDate: The new password expiration date.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: SetPWDExpireModeByID
  type: Method
  synopsis: 'UAPI.SetPWDExpireModeByID(UAPISESSION session, Integer userID, Dynamic mode): Integer'
  comment: |-
    Changes the password expiration mode for a user.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      userID: The ID the user.
      mode: The expiration mode.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: SetUserData
  type: Method
  synopsis: 'UAPI.SetUserData(UAPISESSION session, Integer theType, String name, Dynamic userData): Integer'
  comment: |-
    Deprecated.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      theType: The UAPI type of the user or group whose userData will
               be changed.
      name: The name of the user or group whose userData will be
            changed.
      userData: The new value to store as the userData (for user type
                and name specifications). To store more than one
                value, specify a List.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: SetUserDataByID
  type: Method
  synopsis: 'UAPI.SetUserDataByID(UAPISESSION session, Integer ID, Dynamic userData): Integer'
  comment: |-
    Modifies the value stored in the userData field of a user or a
    group.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      theType: The ID of the user or group whose userData will be
               changed.
      userData: The new value to store as the userData (for user type
                and name specifications). To store more than one
                value, specify a List.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: SetUserDefaultGroup
  type: Method
  synopsis: 'UAPI.SetUserDefaultGroup(UAPISESSION session, String userName, Integer groupType, String groupName): Integer'
  comment: |-
    Deprecated.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      userName: The name of the user whose default group will be
                changed.
      groupType: The UAPI type of the new default group.
      groupName: The name of the new default group.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: SetUserDefaultGroupByIDs
  type: Method
  synopsis: 'UAPI.SetUserDefaultGroupByIDs(UAPISESSION session, Integer userID, Integer groupID): Integer'
  comment: |-
    Assigns a new base group to the specified user.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      userID: The ID of the user.
      groupID: The ID of the new base group for this user.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: SetUserLanguage
  type: Method
  synopsis: 'UAPI.SetUserLanguage(CAPILOGIN login, String languageCode, : Integer'
  comment: |-
    Set the user's preferred metadata language.

    **Parameters**:
      login: The CAPILogin with which the information is
             associated.
      languageCode: The language code representing the user's
                    preferred metadata language.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: SetUserPassword
  type: Method
  synopsis: 'UAPI.SetUserPassword(UAPISESSION session, String userName, Dynamic curPwd, String arg4): Integer'
  comment: |-
    Deprecated.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      userName: The name of the user whose password will be
                modified.
      curPwd: The user's current password. Must be either a String or
              Undefined. If specified, then the current password
              must pass verification before the new password is
              assigned.
      newPwd: The new password to assign.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: SetUserPasswordByID
  type: Method
  synopsis: 'UAPI.SetUserPasswordByID(UAPISESSION session, Integer userID, Dynamic curPwd, String arg4): Integer'
  comment: |-
    Modifies the specified user's password.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      userID: The ID of the user whose password will be
              modified.
      curPwd: The user's current password. Must be either a String or
              Undefined. If specified, then the current password
              must pass verification before the new password is
              assigned.
      newPwd: The new password to assign.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: SetUserPrivileges
  type: Method
  synopsis: 'UAPI.SetUserPrivileges(UAPISESSION session, String userName, Integer privileges): Integer'
  comment: |-
    Deprecated.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      userName: The name of the user whose privileges will be
                modified.
      privileges: Specifies one or more user privilege constants,
                  combined using bitwise OR ( | ) operators.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: SetUserPrivilegesByID
  type: Method
  synopsis: 'UAPI.SetUserPrivilegesByID(UAPISESSION session, Integer userID, Integer privileges): Integer'
  comment: |-
    Modifies the specified user's privileges.

    **Parameters**:
      session: The UAPISession through which the modification is
               made.
      userID: The ID of the user whose privileges will be
              modified.
      privileges: Specifies one or more user privilege constants,
                  combined using bitwise OR ( | ) operators.

    **Result**:
      The Integer 0 if successful, error otherwise.
-
  id: UserList
  type: Method
  synopsis: 'UAPI.UserList(UAPISESSION session, [Integer spaceID = 0], [Integer brevity = 0]): RecArray'
  comment: |-
    Retrieves basic or extended information about all users in the
    specified space.

    **Parameters**:
      session: The UAPISession through which the information is
               retrieved.
      spaceID: The id of the space. The default is 0 for standard
               users.
      brevity: The default is 0 for extended information, or 1 for
               basic information.

    **Result**:
      A RecArray containing records of users if successful, error
      otherwise.
