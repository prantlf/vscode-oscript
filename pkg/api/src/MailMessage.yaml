-
  id: New
  type: Method
  synopsis: 'MailMessage.New(): MailMessage'
  comment: |-
    Returns a new MailMessage object

    **Parameters**:
      None:

    **Result**:
      A new MailMessage object or undefined if there was an error
      constructing the object.
-
  id: AddContent
  type: Method
  synopsis: 'MailMessage.AddContent(String content, Integer contentTransferEncodingType): Integer'
  comment: |-
    Adds inline content to a multipart email message.

    **Parameters**:
      content: the content to inline
      contentTransferEncodingType: the content transfer encoding
                                   type, see above for
                                   constants

    **Result**:
      Returns 0 for success and -1 if an error occurred.
-
  id: AddFileAttachment
  type: Method
  synopsis: 'MailMessage.AddFileAttachment(String attachmentName, String filename, Integer contentTransferEncodingType, [String mimeType]): Integer'
  comment: |-
    Same as calling AddFilePart ( attachmentName, filename,
    CONTENT_ATTACHMENT, contentTransferEncodingType ). mimeType
    param is optional and defaults to 'text/plain'.

    **Parameters**:
      attachmentName: the name for the attachment
      filename: the filename of the attachment
      contentTransferEncodingType: the content encoding
      mimeType: the content mimeType

    **Result**:
      Returns 0 for success and -1 if an error occurred.
-
  id: AddFilePart
  type: Method
  synopsis: 'MailMessage.AddFilePart(String partName, String fileName, Integer contentDisposition, Integer contentEncoding, [String mimeType]): Integer'
  comment: |-
    Adds parts to a multipart email, from a file.  Content
    disposition constants are CONTENT_INLINE or CONTENT_ATTACHMENT.
    See above for content type encodings.  The mimeType string is
    optional and defaults to "text/plain".

    **Parameters**:
      partName: the name for the part
      fileName: the filename to use for the part data
      contentDisposition: the content disposition type
      contentEncoding: the content encoding
      mimeType: the content mimeType

    **Result**:
      Returns 0 for success and -1 if an error occurred.
-
  id: AddRecipient
  type: Method
  synopsis: 'MailMessage.AddRecipient(Integer type, String emailAddress, [String fullName]): Integer'
  comment: |-
    The type can be one of PRIMARY_RECIPIENT, CC_RECIPIENT or
    BCC_RECIPIENT.  The email param should be the fully qualified
    email address and the fullName parameter is optional and can
    contain the users full name ie, "John Doe".  You can add as many
    recipients as you like.

    **Parameters**:
      type: type can be one of PRIMARY_RECIPIENT, CC_RECIPIENT or
            BCC_RECIPIENT
      emailAddress: fully qualified email address of the
                    recipient
      fullName: optional, can be the full name of the user

    **Result**:
      Returns 0 for success and -1 if an error occurred.
-
  id: AddStringAttachment
  type: Method
  synopsis: 'MailMessage.AddStringAttachment(String attachmentName, String stringData, Integer contentTransferEncodingType, [String mimeType]): Integer'
  comment: |-
    Same as calling AddStringPart ( attachmentName, stringData,
    CONTENT_INLINE, contentTransferEncodingType ). mimeType param is
    optional and defaults to 'text/plain'.

    **Parameters**:
      attachmentName: the name for the attachment
      stringData: the string data of the attachment
      contentTransferEncodingType: the content encoding
      mimeType: the content mimeType

    **Result**:
      Returns 0 for success and -1 if an error occurred.
-
  id: AddStringPart
  type: Method
  synopsis: 'MailMessage.AddStringPart(String partName, String stringData, Integer contentDisposition, Integer contentEncoding, [String mimeType]): Integer'
  comment: |-
    Adds parts to a multipart email, from a text source.  See above
    for  content disposition constants.  See above for content type
    encodings.  The mimeType string is optional and defaults to
    "text/plain".

    **Parameters**:
      partName: the name for the part
      stringData: the string data to use for the part data
      contentDisposition: the content disposition type
      contentEncoding: the content encoding
      mimeType: the content mimeType

    **Result**:
      Returns 0 for success and -1 if an error occurred.
-
  id: GetContent
  type: Method
  synopsis: 'MailMessage.GetContent(): String'
  comment: |-
    Returns a string containing the content, or body, of the email.
    No parameters.  Only applicable for non-multipart messages.

    **Parameters**:
      None:

    **Result**:
      Returns a string containing the content, or body, of the
      email.
-
  id: GetContentType
  type: Method
  synopsis: 'MailMessage.GetContentType(): String'
  comment: |-
    Gets the content type of the email.

    **Parameters**:
      None:

    **Result**:
      Returns the content type of the email.
-
  id: GetDate
  type: Method
  synopsis: 'MailMessage.GetDate(): String'
  comment: |-
    Gets the date of the email.

    **Parameters**:
      None:

    **Result**:
      Returns the date of the email.
-
  id: GetHeaderField
  type: Method
  synopsis: 'MailMessage.GetHeaderField(String fieldName): String'
  comment: |-
    Gets the data of the specified header field.  If the message
    doesn't contain the fieldname, then the string is empty.

    **Parameters**:
      fieldName: the name of the field to retrieve

    **Result**:
      Returns the data of the field.  If the message doesn't contain
      the fieldname, then the string is empty.
-
  id: GetHeaders
  type: Method
  synopsis: 'MailMessage.GetHeaders(): List'
  comment: |-
    Returns a List of all the message headers.  The list will be
    undefined if an error occurred.

    **Parameters**:
      None:

    **Result**:
      Returns a List of all the message headers.  The list will be
      undefined if an error occurred.
-
  id: GetLastError
  type: Method
  synopsis: 'MailMessage.GetLastError(): String'
  comment: |-
    No parameters.  Returns an error string for the last error that
    occured.


    **Result**:
      Returns an error string for the last error that occured.
-
  id: GetMultipartContent
  type: Method
  synopsis: 'MailMessage.GetMultipartContent(): RecArray'
  comment: |-
    Returns a RecArray of all of the parts in the email.  The format
    is as follows:

    **Parameters**:
      None:

    **Result**:
      Returns a RecArray of all of the parts in the email.
-
  id: GetRawMessage
  type: Method
  synopsis: 'MailMessage.GetRawMessage(): String'
  comment: |-
    Returns a String containing the entire raw contents of the
    email.

    **Parameters**:
      None:

    **Result**:
      Returns a String containing the entire raw contents of the
      email.
-
  id: GetRecipients
  type: Method
  synopsis: 'MailMessage.GetRecipients(): RecArray'
  comment: |-
    Returns a recArray of the current email recipients with the
    following record structure: Column 1 : Integer : name=Type
    Column 2 : String : name=Address Column 3 : String :
    name=RealName See above for type constants

    **Parameters**:
      None:

    **Result**:
      Returns a recArray of the current email recipients.
-
  id: GetSender
  type: Method
  synopsis: 'MailMessage.GetSender(): String'
  comment: |-
    Gets the sender of the email.

    **Parameters**:
      None:

    **Result**:
      Returns the sender of the email.
-
  id: GetSubject
  type: Method
  synopsis: 'MailMessage.GetSubject(): String'
  comment: |-
    Gets the subject of the email.

    **Parameters**:
      None:

    **Result**:
      Returns the subject of the email.
-
  id: IsMultipart
  type: Method
  synopsis: 'MailMessage.IsMultipart(): Boolean'
  comment: |-
    TRUE if the email is a multi-part email, FALSE otherwise.  No
    parameters.

    **Parameters**:
      None:

    **Result**:
      Returns TRUE if the email is a multi-part email, FALSE
      otherwise.
-
  id: SetContent
  type: Method
  synopsis: 'MailMessage.SetContent(String content, [Integer contentEncoding]): Integer'
  comment: |-
    Adds text to the body of the email.  This function is only for
    simple non-multipart messages.

    **Parameters**:
      content: the content to add to the body
      contentEncoding: optional, the contentEncoding type to use to
                       encode the content with, see constants above.
                        The default is
                       ENCODING_QUOTEDPRINTABLE.

    **Result**:
      Returns 0 for success and -1 if an error occurred.
-
  id: SetContentType
  type: Method
  synopsis: 'MailMessage.SetContentType(String mediaType): Integer'
  comment: |-
    Sets the content type of the email.

    **Parameters**:
      mediaType: Sets the content type of the email, default is
                 "text/plain".

    **Result**:
      Returns 0 for success and -1 if an error occurred.
-
  id: SetDate
  type: Method
  synopsis: 'MailMessage.SetDate(Date date): Integer'
  comment: |-
    Sets the date of the email.

    **Parameters**:
      date: the date of the email.

    **Result**:
      Returns 0 for success and -1 if an error occurred.
-
  id: SetHeaderField
  type: Method
  synopsis: 'MailMessage.SetHeaderField(String fieldName, String fieldData): Integer'
  comment: |-
    Sets a generic header field in the message.

    **Parameters**:
      fieldName: the name of the field to set
      fieldData: the date for the field

    **Result**:
      Returns 0 for success and -1 if an error occurred.
-
  id: SetSender
  type: Method
  synopsis: 'MailMessage.SetSender(String sender): Integer'
  comment: |-
    Sets the sender of the email.

    **Parameters**:
      sender: the sender of the email.

    **Result**:
      Returns 0 for success and -1 if an error occurred.
-
  id: SetSubject
  type: Method
  synopsis: 'MailMessage.SetSubject(String subject): Integer'
  comment: |-
    Sets the subject of the email.

    **Parameters**:
      subject: the subject of the email.

    **Result**:
      Returns 0 for success and -1 if an error occurred.
