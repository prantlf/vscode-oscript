-
  id: New
  type: Method
  synopsis: 'DOMDocument.New(): DOMDocument'
  comment: |-
    Create a new DOMDocument node, to be used to build a DOM tree in
    memory.


    **Result**:
      The new DOMDocument node.
-
  id: GetDoctype
  type: Method
  synopsis: 'DOMDocument.GetDoctype(): DOMDocumentType'
  comment: |-
    The Document Type Declaration (see DocumentType) associated with
    this document. For HTML documents as well as XML documents
    without a document type declaration this returns null. The DOM
    Level 2 does not support editing the Document Type Declaration,
    therefore docType cannot be altered in any way, including
    through the use of methods, such as insertNode or removeNode,
    inherited from Node. Not implemented.


    **Result**:
      The DOMDocumentType node representing the DTD.
-
  id: GetImplementation
  type: Method
  synopsis: 'DOMDocument.GetImplementation(): DOMImplementation'
  comment: |-
    The DOMImplementation object that handles this document. A DOM
    application may use objects from multiple implementations.


    **Result**:
      The DOMImplementation object that handles this document.
-
  id: GetDocumentElement
  type: Method
  synopsis: 'DOMDocument.GetDocumentElement(): DOMElement'
  comment: |-
    This is a convenience attribute that allows direct access to the
    child node that is the root element of the document.


    **Result**:
      The DOMElement that represents the root node.
-
  id: CreateElement
  type: Method
  synopsis: 'DOMDocument.CreateElement(String tagName): DOMElement'
  comment: |-
    Creates an element of the type specified. Note that the instance
    returned implements the Element interface, so attributes can be
    specified directly on the returned object. In addition, if there
    are known attributes with default values, Attr nodes
    representing them are automatically created and attached to the
    element.

    **Parameters**:
      tagName: The name of the element.

    **Result**:
      A new DOMElement object with the nodeName attribute set to
      tagName.
-
  id: CreateDocumentFragment
  type: Method
  synopsis: 'DOMDocument.CreateDocumentFragment(): DOMDocumentFragment'
  comment: |-
    Creates an empty DocumentFragment object.


    **Result**:
      A new DOMDocumentFragment object.
-
  id: CreateTextNode
  type: Method
  synopsis: 'DOMDocument.CreateTextNode(String data): DOMText'
  comment: |-
    Creates a Text node given the specified string.

    **Parameters**:
      data: The data for the text node.

    **Result**:
      A new DOMText object.
-
  id: CreateComment
  type: Method
  synopsis: 'DOMDocument.CreateComment(String data): DOMComment'
  comment: |-
    Creates a Comment node given the specified string.

    **Parameters**:
      data: The data for the comment node.

    **Result**:
      A new DOMComment object.
-
  id: CreateCDATASection
  type: Method
  synopsis: 'DOMDocument.CreateCDATASection(String data): DOMCDATASection'
  comment: |-
    Creates a CDATASection node whose value is the specified
    string.

    **Parameters**:
      data: The data for the CDATASection node.

    **Result**:
      A new DOMCDATASection object.
-
  id: CreateProcessingInstruction
  type: Method
  synopsis: 'DOMDocument.CreateProcessingInstruction(String target, String data): DOMProcessingInstruction'
  comment: |-
    Creates a ProcessingInstruction node given the specified name and
    data strings.

    **Parameters**:
      target: The target part of the processing instruction.
      data: The data for the node.

    **Result**:
      A new DOMProcessingInstruction object.
-
  id: CreateAttribute
  type: Method
  synopsis: 'DOMDocument.CreateAttribute(String name): DOMAttr'
  comment: |-
    Creates an Attr of the given name. Note that the Attr instance
    can then be set on an Element using the setAttribute
    method.

    **Parameters**:
      name: The name of the attribute.

    **Result**:
      A new DOMAttr object.
-
  id: CreateEntityReference
  type: Method
  synopsis: 'DOMDocument.CreateEntityReference(String name): DOMEntityReference'
  comment: |-
    Creates an EntityReference object. In addition, if the referenced
    entity is known, the child list of the EntityReference node is
    made the same as that of the corresponding Entity node.

    **Parameters**:
      name: The name of the entity to reference.

    **Result**:
      A new DOMEntityReference object.
-
  id: GetElementsByTagName
  type: Method
  synopsis: 'DOMDocument.GetElementsByTagName(String tagName): DOMNodeList'
  comment: |-
    Returns a NodeList of all the Elements with a given tag name in
    the order in which they would be encountered in a preorder
    traversal of the Document tree.

    **Parameters**:
      tagName: The name of the tag to match on. The special value "*"
               matches all tags.

    **Result**:
      A new NodeList object containing all the matched Elements.
