-
  id: ConnectRequest
  type: Method
  synopsis: 'Socket.ConnectRequest: Integer'
  comment: |-
    The callback constant indicating a connection has been made.  For
    internal use only.
-
  id: E_BufferTooSmall
  type: Method
  synopsis: 'Socket.E_BufferTooSmall: Error'
  comment: |-
    An Error terminating a read operation due to too small a read
    buffer.
-
  id: E_EndOfFile
  type: Method
  synopsis: 'Socket.E_EndOfFile: Error'
  comment: |-
    An Error terminating a read operation due to end of file.
-
  id: E_Error
  type: Method
  synopsis: 'Socket.E_Error: Error'
  comment: |-
    The generic Socket Error.
-
  id: E_UserCancelled
  type: Method
  synopsis: 'Socket.E_UserCancelled: Error'
  comment: |-
    An Error terminating a read or write due to a user's request for
    cancellation.
-
  id: ReadReady
  type: Method
  synopsis: 'Socket.ReadReady: Integer'
  comment: |-
    The callback constant indicating a connection has been accepted
    and is now ready for reading.  For internal use only.
-
  id: kSecurityNone
  type: Method
  synopsis: 'Socket.kSecurityNone: Integer'
  comment: |-
    The Security constant indicating no security.
-
  id: kSecuritySSL2
  type: Method
  synopsis: 'Socket.kSecuritySSL2: Integer'
  comment: |-
    The Security constant indicating SSL2 security.
-
  id: kSecuritySSL3
  type: Method
  synopsis: 'Socket.kSecuritySSL3: Integer'
  comment: |-
    The Security constant indicating SSL3 security.
-
  id: Accept
  type: Method
  synopsis: 'Socket.Accept(Socket accept, Socket request): Boolean'
  comment: |-
    Accepts a connection request with a specified Socket.  A request
    must be accepted before data can be read and written.

    **Parameters**:
      accept - A fresh, unconnected Socket which will accept request.:
      request -: was made, which has been assigned to listen on a
                 given port with Socket.Listen().

    **Result**:
      True if the connection was successfully accepted, False
      otherwise.
-
  id: Close
  type: Method
  synopsis: 'Socket.Close(Socket sock): Boolean'
  comment: |-
    Closes the specified socket, after flushing it.

    **Parameters**:
      sock - The Socket to close.:

    **Result**:
      True if the socket was successfully closed, False
      otherwise.
-
  id: CompareIpAddresses
  type: Method
  synopsis: 'Socket.CompareIpAddresses(String addr1, String addr2): Integer'
  comment: |-
    Compares two IPv4 or IPv6 addresses.

    **Parameters**:
      addr1 - an IP address to compare:
      addr2 - the other IP address to compare:

    **Result**:
      Zero if the addresses are equal, non-zero otherwise.
-
  id: Connect
  type: Method
  synopsis: 'Socket.Connect(Socket sock, String host, Integer port): Boolean'
  comment: |-
    Attempts to connect a Socket to the specified host name and port
    number.

    **Parameters**:
      sock - The Socket to connect.:
      host - The String name of the host.:
      port -: made, which should be a positive Integer less than or
              equal to 65535.

    **Result**:
      True if the Connection was successful, false or Error
      otherwise.
-
  id: Create
  type: Method
  synopsis: 'Socket.Create([Dynamic featurename], [Dynamic callbackobj]): Socket'
  comment: |-
    Creates a new Socket.  The optional arguments are for internal
    use only.

    **Parameters**:
      featurename -: callbackobj to invoke when a connection request
                     is made or data is available for reading.  For
                     internal use only.
      callbackobj -: featurename.  For internal use only.

    **Result**:
      The new Socket.
-
  id: Flush
  type: Method
  synopsis: 'Socket.Flush(Socket sock): Void'
  comment: |-
    Flushes the output buffer of the specified Socket.

    **Parameters**:
      sock - The Socket to flush.:

    **Result**:
      No useful value.
-
  id: GetAddrByName
  type: Method
  synopsis: 'Socket.GetAddrByName(String hostname): String'
  comment: |-
    Returns a string of the IP address resolved for the given
    hostname.

    **Parameters**:
      host - The String name of the host.:

    **Result**:
      Resolved IP address.  An empty String is returned if the
      address could not be resolved.
-
  id: Listen
  type: Method
  synopsis: 'Socket.Listen(Socket sock, Integer port): Boolean'
  comment: |-
    Assigns the socket to listen on the given port.

    **Parameters**:
      sock - The Socket to assign to listen:
      port - The port number on which the Socket should listen, which should be a positive value less than or equal to 65535.:

    **Result**:
      True if the Socket has successfully been assigned to listen on
      the given port, False if not (the socket may have already been
      assigned to listen).
-
  id: Read
  type: Method
  synopsis: 'Socket.Read(Socket sock): String'
  comment: |-
    Reads available data from the specified Socket into a String
    until input is exhausted or the input buffer is full.

    **Parameters**:
      sock - The Socket to read from.:

    **Result**:
      The String read, which may be of zero length if no input was
      available for reading, otherwise Error if the Socket could not
      be read, possibly due to end of file.
-
  id: ReadBytes
  type: Method
  synopsis: 'Socket.ReadBytes(Socket sock): Bytes'
  comment: |-
    Reads available data from the specified Socket into a Bytes until
    input is exhausted or the input buffer is full.

    **Parameters**:
      sock - The Socket to read from.:

    **Result**:
      The Bytes read, which may be of zero length if no input was
      available for reading, otherwise Error if the Socket could not
      be read, possibly due to end of file.
-
  id: StreamBytesUntil
  type: Method
  synopsis: 'Socket.StreamBytesUntil(Socket sock, Dynamic token, [Integer maxlength], [Integer msDelay]): List'
  comment: |-
    Reads a Bytes from a Socket until either input matching token is
    read or maxlength number of bytes are read. Note that the
    Socket.pStreaming attribute must be set to true on the Socket to
    make it a stream Socket before this operation may be
    performed.

    **Parameters**:
      sock: The stream Socket from which input will be read until
            either token is encountered, or maxlength bytes have
            been read.
      token: The token Bytes to read until.
      maxlength: If specified, the maximum number of bytes read
                 before returning if token is not encountered. The
                 default is a reasonable buffer size (4096).
      msDelay: If specified, the millisecond delay between read
               tries, this will  allow clients to wait for input
               without being as much of a CPU hog.

    **Result**:
      The Bytes read, or Error.
-
  id: StreamUntil
  type: Method
  synopsis: 'Socket.StreamUntil(Socket sock, [Dynamic token], [Integer maxlength], [Integer msDelay]): List'
  comment: |-
    Reads a String from a Socket until either input matching token is
    read or maxlength number of bytes are read. Note that the
    Socket.pStreaming attribute must be set to true on the Socket to
    make it a stream Socket before this operation may be
    performed.

    **Parameters**:
      sock - The Socket from which a String will be read.:
      token -: The default is the empty String, meaning all available
               input is read.
      maxlength -: returning if token is not encountered. The default
                   is a reasonable buffer size (4096).
      msDelay: If specified, the millisecond delay between read
               tries, this will allow clients to wait for input
               without being as much of a CPU hog.

    **Result**:
      The String read, or Error.
-
  id: Write
  type: Method
  synopsis: 'Socket.Write(Socket sock, Dynamic value): Boolean'
  comment: |-
    Writes a String or the contents of a Bytes to the given
    Socket.

    **Parameters**:
      sock - The Socket to which the data is written.:
      value - A String or Bytes to write to the Socket.:

    **Result**:
      True if the value was successfully written to the Socket, False
      otherwise or Error.
