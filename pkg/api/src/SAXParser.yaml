-
  id: New
  type: Method
  synopsis: 'SAXParser.New(): SAXParser'
  comment: |-
    Create a new SAXParser instance.


    **Result**:
      A new SAXParser.
-
  id: Parse
  type: Method
  synopsis: 'SAXParser.Parse(String xmlFile): Assoc'
  comment: |-
    Parse an XML file.

    **Parameters**:
      xmlFile: XML file to be parsed.

    **Result**:
      An Assoc that contains:
-
  id: SetDoValidation
  type: Method
  synopsis: 'SAXParser.SetDoValidation(Boolean newState): Void'
  comment: |-
    Determines whether the XML document should be validated against
    the Document Type Definition (DTD).

    **Parameters**:
      newState: True if the XML document should be validated against
                the DTD.
-
  id: SetDoNamespaces
  type: Method
  synopsis: 'SAXParser.SetDoNamespaces(Boolean newState): Void'
  comment: |-
    Determines whether support for XML Namespaces should be
    enabled.

    **Parameters**:
      newState: True if namespaces should be enabled.
-
  id: SetExitOnFirstFatalError
  type: Method
  synopsis: 'SAXParser.SetExitOnFirstFatalError(Boolean newState): Void'
  comment: |-
    Determines whether parsing should be ended when the first fatal
    error occurs.

    **Parameters**:
      newState: True if exit on first error.
-
  id: SetDeleteTmpFiles
  type: Method
  synopsis: 'SAXParser.SetDeleteTmpFiles(Boolean newState): Void'
  comment: |-
    Determines if temporary files should be deleted immediately after
    the element that uses the the temporary file is processed.

    **Parameters**:
      newState: True if temporary file should be deleted after tag is
                processed.
-
  id: RemoveTmpFiles
  type: Method
  synopsis: 'SAXParser.RemoveTmpFiles(): Void'
  comment: |-
    Removes temporary files if a document is not being parsed.
-
  id: SetTmpFileTags
  type: Method
  synopsis: 'SAXParser.SetTmpFileTags(List tags): Void'
  comment: |-
    Sets a list of tags that require temporary files because their
    content (value) is too large for an oscript string. If a tag is
    passed in this list, then when the StartElement callback occurs
    an attribute "filename" is added to the attribute list. The
    value for the attribute holds the name of the temporary
    file.

    **Parameters**:
      tags: List of strings that will require temporary files.
-
  id: SetCharactersHandler
  type: Method
  synopsis: 'SAXParser.SetCharactersHandler(Dynamic sax, Dynamic handler): Void'
  comment: |-
    Receive notification of character data. The characters handler is
    void Characters ( String name, Integer size ) , where the tag
    name is stored in the variable name, and the variable size is
    the length of the name.

    **Parameters**:
      sax: An instance of the sax parser.
      handler: An instance of the handler method.
-
  id: SetEndDocumentHandler
  type: Method
  synopsis: 'SAXParser.SetEndDocumentHandler(Dynamic sax, Dynamic handler): Void'
  comment: |-
    Receive notification of the end of a document. The end document
    handler is EndDocument ().

    **Parameters**:
      sax: An instance of the sax parser.
      handler: An instance of the handler method.
-
  id: SetEndElementHandler
  type: Method
  synopsis: 'SAXParser.SetEndElementHandler(Dynamic sax, Dynamic handler): Void'
  comment: |-
    Receive notification of the end of an element. The end element
    handler is void EndElement ( String name ) , where the tag name
    is stored in the variable name.

    **Parameters**:
      sax: An instance of the sax parser.
      handler: An instance of the handler method.
-
  id: SetIgnorableWhitespaceHandler
  type: Method
  synopsis: 'SAXParser.SetIgnorableWhitespaceHandler(Dynamic sax, Dynamic handler): Void'
  comment: |-
    Receive notification of the end of an element. The ignorable
    whitespace handler is void IgnorableWhitespace ( String chars,
    Integer size ) , where the variable chars stores the characters
    to ignore, and the variable size is the length of the
    chars.

    **Parameters**:
      sax: An instance of the sax parser.
      handler: An instance of the handler method.
-
  id: SetProcessingInstructionHandler
  type: Method
  synopsis: 'SAXParser.SetProcessingInstructionHandler(Dynamic sax, Dynamic handler): Void'
  comment: |-
    Receive notification of a processing instruction. The handler for
    processing instruction of the form void ProcessingInstruction (
    String target, String data )  , where target is the target of
    the processing instruction and data is the processing
    instruction data.

    **Parameters**:
      sax: An instance of the sax parser.
      handler: An instance of the handler method.
-
  id: SetResetDocumentHandler
  type: Method
  synopsis: 'SAXParser.SetResetDocumentHandler(Dynamic sax, Dynamic handler): Void'
  comment: |-
    Reset the document on its reuse. The handler is  void
    ResetDocument ( )

    **Parameters**:
      sax: An instance of the sax parser.
      handler: An instance of the handler method.
-
  id: SetStartDocumentHandler
  type: Method
  synopsis: 'SAXParser.SetStartDocumentHandler(Dynamic sax, Dynamic handler): Void'
  comment: |-
    Receive notification of the beginning of a document. The handler
    signature is StartDocument ( ).

    **Parameters**:
      sax: An instance of the sax parser.
      handler: An instance of the handler method.
-
  id: SetStartElementHandler
  type: Method
  synopsis: 'SAXParser.SetStartElementHandler(Dynamic sax, Dynamic handler): Void'
  comment: |-
    Receive notification of the beginning of an element. The handler
    signature is StartElement ( String name, Assoc attributes ),
    where the name of the element is the first argument and
    attributes is an Assoc which holds the name, value pairs for the
    attributes of the element.

    **Parameters**:
      sax: An instance of the sax parser.
      handler: An instance of the handler method.
