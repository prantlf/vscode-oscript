-
  id: E_CompilationErrors
  type: Property
  synopsis: 'Compiler.E_CompilationErrors: Error'
  comment: |-
    Indicates errors during compilation. See Compiler.Compile() or
    Compiler.CompileGeneral() for more information.
-
  id: kLogConversionInfo
  type: Property
  synopsis: 'Compiler.kLogConversionInfo: Integer'
  comment: |-
    Internal use only. See Compiler.Compile() or
    Compiler.CompileGeneral() for more information.
-
  id: kStripSource
  type: Property
  synopsis: 'Compiler.kStripSource: Integer'
  comment: |-
    Internal use only. See Compiler.Compile() or
    Compiler.CompileGeneral() for more information.
-
  id: ClearBreaks
  type: Method
  synopsis: 'Compiler.ClearBreaks(Script theScript): Script'
  comment: |-
    Clears all breakpoints in the specified script. If the script is
    not yet compiled and source is available within the script, then
    it will be compiled. If the script contains compiled code, then
    any breakpoints present in the script will be removed and the
    script will be returned. If the script has no binary code or
    cannot be compiled, then Undefined will be returned.

    **Parameters**:
      theScript: Script value to modify.

    **Result**:
      If successful, theScript will be returned. Otherwise, Undefined
      will be returned.
-
  id: Compile
  type: Method
  synopsis: 'Compiler.Compile(Dynamic sourceValue, [String sourceRef]): Script'
  comment: |-
    Compiles OScript source into a Script value. The source can be
    either a String, a Script, or a File value.

    **Parameters**:
      sourceValue: A Script, File, or String value that contains or
                   refers to the OScript source to compile.
      sourceRef: Internal use only. A String which is used by
                 LivelinkSDK to determine where the source
                 originated.

    **Result**:
      A compiled Script value if successful, the Error value
      E_CompilationErrors otherwise.
-
  id: CompileGeneral
  type: Method
  synopsis: 'Compiler.CompileGeneral(Dynamic sourceValue, [String sourceRef], [Integer compilationFlags]): List'
  comment: |-
    Compiles OScript and returns a list of errors. This is similar to
    the Compiler.Compile() function, except that it will return any
    errors or warnings that occurred during compilation. This is
    primarily used by the Livelink SDK.

    **Parameters**:
      sourceValue: A Script, File, or String value that contains or
                   refers to the OScript source to compile.
      sourceRef: Internal use only. A String which is used by
                 LivelinkSDK to determine where the source
                 originated.
      compilationFlags: Internal use only. The following flags can be
                        used: Compiler.kStripSource and
                        Compiler.kLogConversionInfo.

    **Result**:
      A tuple consisting of two elements: the first is either the
      compiled Script or the Error E_CompilationErrors, the second
      is a possibly empty list of error message Strings. These error
      message Strings consist of three parts, separated by an
      end-of-line (ASCII 10) character.The first part indicates the
      type or severity of error: Warning, Error, Fatal, or Info. The
      second part indicates the actual error text, and the third
      part indicates where in the source that the error occurs.
-
  id: GetBreakOnEntry
  type: Method
  synopsis: 'Compiler.GetBreakOnEntry(Script theScript): Boolean'
  comment: |-
    Returns TRUE if the given Script value contains a breakpoint on
    its first executable line, FALSE otherwise.

    **Parameters**:
      theScript: Script value to examine.

    **Result**:
      TRUE if the given Script value contains a breakpoint on its
      first executable line, FALSE otherwise.
-
  id: MakeScript
  type: Method
  synopsis: 'Compiler.MakeScript(String source, [String sourceRef]): Script'
  comment: |-
    Creates a Script value that contains source, but no compiled
    binary code. The script can still be executed later, although
    this will require it to be compiled "on-the-fly", perhaps at a
    substantial performance penalty.

    **Parameters**:
      source: A String containing OScript source code.
      sourceRef: Internal use only. A String which is used by
                 LivelinkSDK to determine where the source
                 originated.

    **Result**:
      A Script value that contains no compiled code, but that has the
      specified source code within it.
-
  id: Prototype
  type: Method
  synopsis: 'Compiler.Prototype(Script theScript): List'
  comment: |-
    Internal use only. Describes the function prototype(s) within a
    compiled script by returning a list containing function names,
    return types, and parameter names and types.

    **Parameters**:
      theScript: A compiled Script whose function(s) are described as
                 prototypes.

    **Result**:
      A List if successful, or Undefined otherwise. If successful,
      the first element is a List with two elements, the Integer
      type number of the value returned by the main function (for
      example IntegerType), and the String name of the main
      function. The second element is a List of Lists, where each
      List defines a formal parameter using two elements; the first
      element is the Integer data type of the parameter, and the
      second element is the String name of the parameter. This
      function returns Undefined if theScript is not a Script, or if
      theScript cannot be successfully loaded or compiled.
-
  id: SetBreakOnEntry
  type: Method
  synopsis: 'Compiler.SetBreakOnEntry(Script theScript, Boolean setBreak): Script'
  comment: |-
    Sets or clears the initial breakpoint for a script. Given a
    Script value, this either sets or clears the initial breakpoint
    (i.e., the break-on-entry state) for the Script. The modified
    script is returned. See GetBreakOnEntry().

    **Parameters**:
      theScript: Script value to modify
      setBreak: TRUE means that the breakpoint will be set, FALSE
                means that it will be cleared

    **Result**:
      If successful, a script identical with theScript is returned,
      otherwise, Undefined is returned.
-
  id: Source
  type: Method
  synopsis: 'Compiler.Source(Script theScript): String'
  comment: |-
    Extracts the source code (if any) from a Script value.

    **Parameters**:
      theScript: Script value to extract source from.

    **Result**:
      A String containing the source code. In the event that the
      script was compiled without source (e.g., via
      Compiler.kStripSource), then this function will return the
      empty string ("").
-
  id: SourceRef
  type: Method
  synopsis: 'Compiler.SourceRef(Script theScript): String'
  comment: |-
    Extract the SourceRef (if any) from a script. This is used
    internally by the Livelink SDK to synchronize information
    between the compiler, debugger, inspector and other SDK
    tools.

    **Parameters**:
      theScript: Script value to extract SourceRef from.

    **Result**:
      A String containing the SourceRef, or the empty string ("") if
      there is no SourceRef.
