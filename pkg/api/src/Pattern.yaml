-
  id: E_IllegalChangePattern
  type: Property
  synopsis: 'Pattern.E_IllegalChangePattern: Error'
  comment: |-
    Error returned when an invalid change pattern is compiled.
-
  id: E_IllegalFindPattern
  type: Property
  synopsis: 'Pattern.E_IllegalFindPattern: Error'
  comment: |-
    Error returned when an invalid find pattern is compiled.
-
  id: PatChangeType
  type: Property
  synopsis: 'Pattern.PatChangeType: Integer'
  comment: |-
    The datatype number for the PatChange datatype.
-
  id: PatFindType
  type: Property
  synopsis: 'Pattern.PatFindType: Integer'
  comment: |-
    The datatype number for the PatFind datatype.
-
  id: Change
  type: Method
  synopsis: 'Pattern.Change(String target, Dynamic find, Dynamic change, [Boolean ignoreCase]): String'
  comment: |-
    Searches the target String for all occurrences of the find
    pattern, and replaces each occurrence with the specified change
    pattern.

    **Parameters**:
      target - The target String upon which to perform a search and replace.:
      find - The find pattern, either as a String or a compiled PatFind.:
      change - The change pattern, either as a String or a compiled PatChange.:
      ignoreCase - If specified and TRUE, case is ignored in comparisons, otherwise FALSE, the default, for case-sensitive comparisons.:

    **Result**:
      The new String result of the find and replace operation.
-
  id: CompileChange
  type: Method
  synopsis: 'Pattern.CompileChange(String pattern): PatChange'
  comment: |-
    Returns a compiled version of the specified String change
    pattern.

    **Parameters**:
      pattern - The change pattern to compile.:

    **Result**:
      The successfully compiled PatChange, or an Error if the pattern
      String could not be compiled.
-
  id: CompileFind
  type: Method
  synopsis: 'Pattern.CompileFind(String pattern): PatFind'
  comment: |-
    Returns a compiled version of the specified String find
    pattern.

    **Parameters**:
      pattern - The find pattern to compile.:

    **Result**:
      The successfully compiled PatChange, or an Error if the pattern
      String could not be compiled.
-
  id: Find
  type: Method
  synopsis: 'Pattern.Find(String target, Dynamic find, [Boolean ignoreCase]): List'
  comment: |-
    Finds and returns a List describing the first match found of the
    find pattern in the target String. Otherwise, Undefined is
    returned if no match could be found.

    **Parameters**:
      target -  The target String upon which the pattern match is performed.:
      find - The find pattern, either as a String or a compiled FindPat.:
      ignoreCase - If specified and TRUE, case is ignored in comparisons, otherwise FALSE, the default, for case-sensitive comparisons.:

    **Result**:
      If a match was found, a List, otherwise, Undefined if a match
      could not be found, or Error if a String pattern could not be
      compiled. The List will contain the following elements:
      Element Meaning 1 The inclusive start index of the match
      within the target String. 2 The exclusive end index of the
      match within the target String. 3 The complete match text as a
      String. [ 4 onwards ] Optionally any tagged elements extracted
      as Strings listed in the order they were tagged.
