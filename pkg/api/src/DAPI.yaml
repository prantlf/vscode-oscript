-
  id: ALIAS_NODE
  type: Property
  synopsis: 'DAPI.ALIAS_NODE: Integer'
  comment: |-
    The subtype of an alias node. The value is 1.
-
  id: ALL_COLUMNS
  type: Property
  synopsis: 'DAPI.ALL_COLUMNS: Integer'
  comment: |-
    Specify to include all columns (both system and user columns).
    Used by DAPI.GetNodeColumnNames() and
    DAPI.GetVersionColumnNames().
-
  id: ATTR_DATE
  type: Property
  synopsis: 'DAPI.ATTR_DATE: Integer'
  comment: |-
    Specifies that an attribute type is a Date. Used by
    DAPI.AddCategoryAttr().
-
  id: ATTR_FCHAR
  type: MethConstantod
  synopsis: 'DAPI.ATTR_FCHAR: Integer'
  comment: |-
    Specifies that an attribute type is text of a fixed length. Used
    by DAPI.AddCategoryAttr().
-
  id: ATTR_INT
  type: Property
  synopsis: 'DAPI.ATTR_INT: Integer'
  comment: |-
    Specifies that the attribute type is an Integer. Used by
    DAPI.AddCategoryAttr().
-
  id: ATTR_LCHAR
  type: Property
  synopsis: 'DAPI.ATTR_LCHAR: Integer'
  comment: |-
    Specifies than an attribute type is long length text. Used by
    DAPI.AddCategoryAttr().
-
  id: ATTR_REAL
  type: Property
  synopsis: 'DAPI.ATTR_REAL: Integer'
  comment: |-
    Specifies that the attribute type is a Real number. Used by
    DAPI.AddCategoryAttr().
-
  id: ATTR_SET_ALL
  type: Property
  synopsis: 'DAPI.ATTR_SET_ALL: Integer'
  comment: |-
    Specify to include both the system and category attributes. Used
    by DAPI.GetNodeUserAttr() and DAPI.SetNodeUserAttr().
-
  id: ATTR_SET_CAT
  type: Property
  synopsis: 'DAPI.ATTR_SET_CAT: Integer'
  comment: |-
    Specify to include only the category attributes. Used by
    DAPI.GetNodeUserAttr() and DAPI.SetNodeUserAttr().
-
  id: ATTR_SET_SYS
  type: Property
  synopsis: 'DAPI.ATTR_SET_SYS: Integer'
  comment: |-
    Specify to include only the system attribute. Used by
    DAPI.GetNodeUserAttr() and DAPI.SetNodeUserAttr().
-
  id: ATTR_VCHAR
  type: Property
  synopsis: 'DAPI.ATTR_VCHAR: Integer'
  comment: |-
    Specifies that the attribute type is variable length text. Used
    by DAPI.AddCategoryAttr().
-
  id: AuditEventADDVERSION
  type: Property
  synopsis: 'DAPI.AuditEventADDVERSION: Integer'
  comment: |-
    The auditing event recorded when a version is added to a node, as
    with DAPI.AddVersion() or DAPI.AddValAsVersion().
-
  id: AuditEventALIAS
  type: Property
  synopsis: 'DAPI.AuditEventALIAS: Integer'
  comment: |-
    The auditing event recorded when a node is aliased, as with
    DAPI.AliasNode().
-
  id: AuditEventATTRCHANGE
  type: Property
  synopsis: 'DAPI.AuditEventATTRCHANGE: Integer'
  comment: |-
    The auditing event recorded when the system or category
    attributes of a node have changed, as with
    DAPI.SetNodeUserAttr() or DAPI.UpdateNode().
-
  id: AuditEventCDORDERED
  type: Property
  synopsis: 'DAPI.AuditEventCDORDERED: Integer'
  comment: |-
    The auditing event recorded when the ordering of a compound
    document's child node has changed, as with
    DAPI.UpdateNode()
-
  id: AuditEventCOPY
  type: Property
  synopsis: 'DAPI.AuditEventCOPY: Integer'
  comment: |-
    The auditing event recorded when a node is copied, as with
    DAPI.CopyNode().
-
  id: AuditEventCREATE
  type: Property
  synopsis: 'DAPI.AuditEventCREATE: Integer'
  comment: |-
    The auditing event recorded when a node is created, as with
    DAPI.AliasNode() or DAPI.CreateNode().
-
  id: AuditEventCREATEGEN
  type: Property
  synopsis: 'DAPI.AuditEventCREATEGEN: Integer'
  comment: |-
    The auditing event recorded when a generation is created for a
    node, as with DAPI.CreateGeneration().
-
  id: AuditEventCREATEREL
  type: Property
  synopsis: 'DAPI.AuditEventCREATEREL: Integer'
  comment: |-
    The auditing event recorded when a release is created for a
    compound document, as with DAPI.CreateNode() called with a
    subtype of 138.
-
  id: AuditEventCREATEREND
  type: Property
  synopsis: 'DAPI.AuditEventCREATEREND: Integer'
  comment: |-
    The auditing event recorded when a rendition is added to a
    version of a node, as with DAPI.AddRendition() or
    DAPI.AddRenditionFromStream().
-
  id: AuditEventCREATEREV
  type: Property
  synopsis: 'DAPI.AuditEventCREATEREV: Integer'
  comment: |-
    The auditing event recorded when a revision is created for a
    compound document, as with DAPI.CreateNode() with a subtype of
    139.
-
  id: AuditEventDELETE
  type: Property
  synopsis: 'DAPI.AuditEventDELETE: Integer'
  comment: |-
    The auditing event recorded when a node is deleted, as with
    DAPI.DeleteNode().
-
  id: AuditEventDELREL
  type: Property
  synopsis: 'DAPI.AuditEventDELREL: Integer'
  comment: |-
    The auditing event recorded when a release of a compound document
    is deleted, as with DAPI.DeleteNode() with a subtype of
    138.
-
  id: AuditEventDELREND
  type: Property
  synopsis: 'DAPI.AuditEventDELREND: Integer'
  comment: |-
    The auditing event recorded when a rendition of a version is
    deleted, as with DAPI.DeleteRendition().
-
  id: AuditEventDELREV
  type: Property
  synopsis: 'DAPI.AuditEventDELREV: Integer'
  comment: |-
    The auditing event recorded when a revision of a compound
    document is deleted, as with DAPI.DeleteNode() with a subtype of
    139.
-
  id: AuditEventDELVERSION
  type: Property
  synopsis: 'DAPI.AuditEventDELVERSION: Integer'
  comment: |-
    The auditing event recorded when a version of a node is deleted,
    as with DAPI.DeleteVersion().
-
  id: AuditEventFETCH
  type: Property
  synopsis: 'DAPI.AuditEventFETCH: Integer'
  comment: |-
    The auditing event recorded when a version of a node is fetched,
    as with DAPI.FetchVersion(), DAPI.FetchVersionToStream(), or
    DAPI.FetchVersionRangesToStream().
-
  id: AuditEventLOGIN
  type: Property
  synopsis: 'DAPI.AuditEventLOGIN: Integer'
  comment: |-
    The auditing event recorded when a user logs in to the system.
    This event is not recorded by any DAPI function.
-
  id: AuditEventLOGOUT
  type: Property
  synopsis: 'DAPI.AuditEventLOGOUT: Integer'
  comment: |-
    The auditing event recorded when a user logs out of the system.
    This event is not recorded by any DAPI function.
-
  id: AuditEventMOVE
  type: Property
  synopsis: 'DAPI.AuditEventMOVE: Integer'
  comment: |-
    The auditing event recorded when a node is moved, as with
    DAPI.MoveNode().
-
  id: AuditEventPERMCHANGE
  type: Property
  synopsis: 'DAPI.AuditEventPERMCHANGE: Integer'
  comment: |-
    The auditing event recorded when the permissions of a node has
    changed, as with DAPI.UpdateNode(), DAPI.AddNodeRight(),
    DAPI.UpdateNodeRight(), or DAPI.DeleteNodeRight().
-
  id: AuditEventPURGE
  type: Property
  synopsis: 'DAPI.AuditEventPURGE: Integer'
  comment: |-
    The auditing event recorded when versions of a node is purged, as
    with DAPI.PurgeVersions().
-
  id: AuditEventRENAME
  type: Property
  synopsis: 'DAPI.AuditEventRENAME: Integer'
  comment: |-
    The auditing event recorded when a node is renamed, as with
    DAPI.RenameNode().
-
  id: AuditEventRESERVE
  type: Property
  synopsis: 'DAPI.AuditEventRESERVE: Integer'
  comment: |-
    The auditing event recorded when a node is reserved, as with
    DAPI.ReserveNode().
-
  id: AuditEventUNRESERVE
  type: Property
  synopsis: 'DAPI.AuditEventUNRESERVE: Integer'
  comment: |-
    The auditing event recorded when a node is unreserved, as with
    DAPI.UnreserveNode().
-
  id: AuditSection
  type: Property
  synopsis: 'DAPI.AuditSection: String'
  comment: |-
    The auditing section identifier used in system initialization. It
    is used to record the auditing events of a node type in the KIni
    table. The value of the identifier is 'Livelink.Auditing'
-
  id: BLK_READ
  type: Property
  synopsis: 'DAPI.BLK_READ: Integer'
  comment: |-
    A provider callback reason constant which indicates the reading
    of a block of blob data from the database.
-
  id: BLK_WRITE
  type: Property
  synopsis: 'DAPI.BLK_WRITE: Integer'
  comment: |-
    A provider callback reason constant which indicates the writing
    of a block of blob data to the database.
-
  id: BY_DATAID
  type: Property
  synopsis: 'DAPI.BY_DATAID: Integer'
  comment: |-
    Specify to operate based on the unique node ID. Used by
    DAPI.GetNodeByID().
-
  id: CANCEL
  type: Property
  synopsis: 'DAPI.CANCEL: Integer'
  comment: |-
    A return status constant used by the callback to cancel an
    operation without causing an error.
-
  id: CB_COPY_VERSION
  type: Property
  synopsis: 'DAPI.CB_COPY_VERSION: Integer'
  comment: |-
    A DAPI callback reason constant which indicates a version of a
    node will be copied.
-
  id: CB_FILTER_NODES
  type: Property
  synopsis: 'DAPI.CB_FILTER_NODES: Integer'
  comment: |-
    A DAPI callback reason constant which indicates one or more nodes
    are fetched for application node filtering.
-
  id: CB_DELETE_VERSION
  type: Property
  synopsis: 'DAPI.CB_DELETE_VERSION: Integer'
  comment: |-
    A DAPI callback reason constant which indicates a version of a
    node will be deleted.
-
  id: CB_NEW_VERSION
  type: Property
  synopsis: 'DAPI.CB_NEW_VERSION: Integer'
  comment: |-
    A DAPI callback reason constant which indicates a new version
    will be added to a node.
-
  id: CB_UPDATE_NODE_USERID
  type: Property
  synopsis: 'DAPI.CB_UPDATE_NODE_USERID: Integer'
  comment: |-
    A DAPI callback reason constant which indicates the owner of a
    node is updated. This is when the pUserID field is updated by
    DAPI.UpdateNode().
-
  id: CLOSE
  type: Property
  synopsis: 'DAPI.CLOSE: Integer'
  comment: |-
    A provider callback reason constant which indicates the closing
    of a blob after opening for reading or writing.
-
  id: COPY_A_NODE
  type: Property
  synopsis: 'DAPI.COPY_A_NODE: Integer'
  comment: |-
    A copy option for copying only the specified node without copying
    its child nodes. Used by DAPI.CopyNode().
-
  id: COPY_CURRENTV
  type: Property
  synopsis: 'DAPI.COPY_CURRENTV: Integer'
  comment: |-
    A copy option for copying only the current version of all nodes.
    Used by DAPI.CopyNode() and DAPI.CopyANode().
-
  id: COPY_DST_CAT
  type: Property
  synopsis: 'DAPI.COPY_DST_CAT: Integer'
  comment: |-
    A copy option to indicate that the copied node will have the same
    category as the destination parent node. Used by
    DAPI.CopyANode().
-
  id: COPY_DST_PERMS
  type: Property
  synopsis: 'DAPI.COPY_DST_PERMS: Integer'
  comment: |-
    A copy option indicating that the copied node will have the same
    permissions as the destination parent node. Used by
    DAPI.CopyANode().
-
  id: COPY_DST_USERATTS
  type: Property
  synopsis: 'DAPI.COPY_DST_USERATTS: Integer'
  comment: |-
    A copy option indicating that the copied node will have the same
    user attributes as the destination parent node. Used by
    DAPI.CopyANode().
-
  id: COPY_NODE
  type: Property
  synopsis: 'DAPI.COPY_NODE: Integer'
  comment: |-
    A DAPI callback reason constant indicating encountered nodes will
    be copied. The callback is issued by DAPI.CopyNode() and
    DAPI.CopyANode().
-
  id: COPY_NO_CAT
  type: Property
  synopsis: 'DAPI.COPY_NO_CAT: Integer'
  comment: |-
    A copy option indicating that the category and its attributes
    should not be copied. Used by DAPI.CopyANode().
-
  id: COPY_NO_USERATTS
  type: Property
  synopsis: 'DAPI.COPY_NO_USERATTS: Integer'
  comment: |-
    A copy option indicating that the user attributes should not be
    copied. Used by DAPI.CopyANode().
-
  id: COPY_NO_VER
  type: Property
  synopsis: 'DAPI.COPY_NO_VER: Integer'
  comment: |-
    A copy option indicating that version information will not be
    copied. Used by DAPI.CopyANode().
-
  id: COPY_PUBLISHEDV
  type: Property
  synopsis: 'DAPI.COPY_PUBLISHEDV: Integer'
  comment: |-
    A copy option indicating that only the published version will be
    copied. Used by DAPI.CopyNode().
-
  id: COPY_SET_CURRUSER
  type: Property
  synopsis: 'DAPI.COPY_SET_CURRUSER: Integer'
  comment: |-
    A copy option which sets the copied node's creator to the current
    user. Used by DAPI.CopyANode().
-
  id: COPY_SPECIFICV
  type: Property
  synopsis: 'DAPI.COPY_SPECIFICV: Integer'
  comment: |-
    A copy option for copying a specific version of a node. Used by
    DAPI.CopyANode().
-
  id: COPY_SRC_PERMS
  type: Property
  synopsis: 'DAPI.COPY_SRC_PERMS: Integer'
  comment: |-
    A copy option indicating that the copied node will have the same
    permissions as the source node. Used by DAPI.CopyNode().
-
  id: COPY_UNLOCKV
  type: Property
  synopsis: 'DAPI.COPY_UNLOCKV: Integer'
  comment: |-
    A copy option indicating that all copied versions will be
    unlocked. Used by DAPI.CopyANode().
-
  id: COPY_UNRESERVE
  type: Property
  synopsis: 'DAPI.COPY_UNRESERVE: Integer'
  comment: |-
    A copy option indicating that all copied nodes will be
    unreserved. Used by DAPI.CopyNode() and DAPI.CopyANode().
-
  id: DATA_DELETE
  type: Property
  synopsis: 'DAPI.DATA_DELETE: Integer'
  comment: |-
    A permission bit which enables version deletion.
-
  id: DATA_FETCH
  type: Property
  synopsis: 'DAPI.DATA_FETCH: Integer'
  comment: |-
    A permission bit which enables access to a version's blob data
    contents.
-
  id: DATA_READ
  type: Property
  synopsis: 'DAPI.DATA_READ: Integer'
  comment: |-
    A permission bit which enables access to version attributes.
-
  id: DATA_USER1
  type: Property
  synopsis: 'DAPI.DATA_USER1: Integer'
  comment: |-
    A permission bit for custom version permission use.
-
  id: DATA_USER2
  type: Property
  synopsis: 'DAPI.DATA_USER2: Integer'
  comment: |-
    A permission bit for custom version permission use.
-
  id: DATA_WRITE
  type: Property
  synopsis: 'DAPI.DATA_WRITE: Integer'
  comment: |-
    A permission bit which enables modification of version
    attributes.
-
  id: DELETE
  type: Property
  synopsis: 'DAPI.DELETE: Integer'
  comment: |-
    A provider callback reason constant which indicates the deletion
    of a blob.
-
  id: DELETE_NODE
  type: Property
  synopsis: 'DAPI.DELETE_NODE: Integer'
  comment: |-
    A DAPI callback reason constant indicating the encountered node
    will be deleted. The callback is issued by
    DAPI.DeleteNode().
-
  id: DELETE_NO_CHILD_COUNT_UPDATE
  type: Property
  synopsis: 'DAPI.DELETE_NO_CHILD_COUNT_UPDATE: Integer'
  comment: |-
    A delete option for DeleteNode() to skip the child count
    update.
-
  id: DapiNodeType
  type: Property
  synopsis: 'DAPI.DapiNodeType: Integer'
  comment: |-
    The DapiNode type number.
-
  id: DapiSessionType
  type: Property
  synopsis: 'DAPI.DapiSessionType: Integer'
  comment: |-
    The DapiSession type number.
-
  id: DapiStreamType
  type: Property
  synopsis: 'DAPI.DapiStreamType: Integer'
  comment: |-
    The DapiStream type number.
-
  id: DapiVersionType
  type: Property
  synopsis: 'DAPI.DapiVersionType: Integer'
  comment: |-
    The DapiVersion type number.
-
  id: ERROR
  type: Property
  synopsis: 'DAPI.ERROR: Integer'
  comment: |-
    A return status constant used by a callback to abort an
    operation.
-
  id: FETCHABLE
  type: Property
  synopsis: 'DAPI.FETCHABLE: Integer'
  comment: |-
    A provider callback reason constant which indicates querying
    whether the blob content is fetchable.
-
  id: FILE_GET
  type: Property
  synopsis: 'DAPI.FILE_GET: Integer'
  comment: |-
    A provider callback reason constant which indicates the reading
    of a blob from the database.
-
  id: FILE_PUT
  type: Property
  synopsis: 'DAPI.FILE_PUT: Integer'
  comment: |-
    A provider callback reason constant which indicates the writing
    of a blob from the database.
-
  id: FULL_PERM_MASK
  type: Property
  synopsis: 'DAPI.FULL_PERM_MASK: Integer'
  comment: |-
    An Integer mask which represents full permissions.
-
  id: GENERATION_NODE
  type: Property
  synopsis: 'DAPI.GENERATION_NODE: Integer'
  comment: |-
    The subtype of a generation node. The value is 2.
-
  id: LOCK_VERSION
  type: Property
  synopsis: 'DAPI.LOCK_VERSION: Integer'
  comment: |-
    The default version locked flag. The value is 128.
-
  id: MOVE_NODE
  type: Property
  synopsis: 'DAPI.MOVE_NODE: Integer'
  comment: |-
    A DAPI callback reason constant which indicates a node was
    encountered and will be moved. The callback is issued by
    DAPI.MoveNode().
-
  id: MOVE_ROOT_NODE
  type: Property
  synopsis: 'DAPI.MOVE_ROOT_NODE: Integer'
  comment: |-
    Internal usage.
-
  id: MOVE_SUB_NODE
  type: Property
  synopsis: 'DAPI.MOVE_SUB_NODE: Integer'
  comment: |-
    Internal usage.
-
  id: NODE_ADD_CHILDREN
  type: Property
  synopsis: 'DAPI.NODE_ADD_CHILDREN: Integer'
  comment: |-
    A permission bit which enables the child node addition.
-
  id: NODE_CONTROL
  type: Property
  synopsis: 'DAPI.NODE_CONTROL: Integer'
  comment: |-
    A permission bit which enables node permission viewing and
    editing.
-
  id: NODE_DELETE
  type: Property
  synopsis: 'DAPI.NODE_DELETE: Integer'
  comment: |-
    A permission bit which enables deletion of the node.
-
  id: NODE_DEL_CHILDREN
  type: Property
  synopsis: 'DAPI.NODE_DEL_CHILDREN: Integer'
  comment: |-
    A permission bit which enables deletion of child nodes for this
    node.
-
  id: NODE_MODIFY_ATTR
  type: Property
  synopsis: 'DAPI.NODE_MODIFY_ATTR: Integer'
  comment: |-
    A permission bit which enables category attribute
    modification.
-
  id: NODE_NODE
  type: Property
  synopsis: 'DAPI.NODE_NODE: Integer'
  comment: |-
    The default subtype of a node. The value is 0.
-
  id: NODE_NOT_RESERVED
  type: Property
  synopsis: 'DAPI.NODE_NOT_RESERVED: Integer'
  comment: |-
    The default node unreserved flag. The value is 0.
-
  id: NODE_READ
  type: Property
  synopsis: 'DAPI.NODE_READ: Integer'
  comment: |-
    A permission bit which enables access to the node's content and
    attributes.
-
  id: NODE_READ_EXPLICIT
  type: Property
  synopsis: 'DAPI.NODE_READ_EXPLICIT: Integer'
  comment: |-
    A permission bit which enables a user to see the node.
-
  id: NODE_USER1
  type: Property
  synopsis: 'DAPI.NODE_USER1: Integer'
  comment: |-
    A permission bit for a custom node permissions.
-
  id: NODE_USER2
  type: Property
  synopsis: 'DAPI.NODE_USER2: Integer'
  comment: |-
    A permission bit for a custom node permissions.
-
  id: NOTIFY_ACL_ADD
  type: Property
  synopsis: 'DAPI.NOTIFY_ACL_ADD: Integer'
  comment: |-
    The change notification constant for the addition of an ACL to a
    node. It is used in the NType column of the DTreeNotify table.
    The value is 8.
-
  id: NOTIFY_ACL_DELETE
  type: Property
  synopsis: 'DAPI.NOTIFY_ACL_DELETE: Integer'
  comment: |-
    The change notification constant for the deleting of an ACL from
    a node. It is used in column NType of the DTreeNotify table. The
    value is 10.
-
  id: NOTIFY_ACL_UPDATE
  type: Property
  synopsis: 'DAPI.NOTIFY_ACL_UPDATE: Integer'
  comment: |-
    The change notification constant for the modification of an ACL
    of a node. It is used in column NType of the DTreeNotify table.
    The value is 9.
-
  id: NOTIFY_COPY
  type: Property
  synopsis: 'DAPI.NOTIFY_COPY: Integer'
  comment: |-
    The change notification constant for the copying of a node. It is
    used in column NType of the DTreeNotify table. The value is
    2.
-
  id: NOTIFY_CREATE
  type: Property
  synopsis: 'DAPI.NOTIFY_CREATE: Integer'
  comment: |-
    The change notification constant for the creation of a node. It
    is used in column NType of the DTreeNotify table. The value is
    1.
-
  id: NOTIFY_CREATE_ROOT
  type: Property
  synopsis: 'DAPI.NOTIFY_CREATE_ROOT: Integer'
  comment: |-
    The change notification constant for the creation of a root node.
    It is used in column NType of the DTreeNotify table. The value
    is 3.
-
  id: NOTIFY_DELETE
  type: Property
  synopsis: 'DAPI.NOTIFY_DELETE: Integer'
  comment: |-
    The change notification constant for deleting a node. It is used
    in column NType of the DTreeNotify table. The value is 4.
-
  id: NOTIFY_DELETE_VERSION
  type: Property
  synopsis: 'DAPI.NOTIFY_DELETE_VERSION: Integer'
  comment: |-
    The change notification constant for deleting a node version. It
    is used in column NType of the DTreeNotify table. The value is
    2004.
-
  id: NOTIFY_MOVE
  type: Property
  synopsis: 'DAPI.NOTIFY_MOVE: Integer'
  comment: |-
    The change notification constant for moving a node. It is used in
    column NType of the DTreeNotify table. The value is 5.
-
  id: NOTIFY_RENAME
  type: Property
  synopsis: 'DAPI.NOTIFY_RENAME: Integer'
  comment: |-
    The change notification constant for renaming a node. It is used
    in column NType of the DTreeNotify table. The value is 6.
-
  id: NOTIFY_UPDATE
  type: Property
  synopsis: 'DAPI.NOTIFY_UPDATE: Integer'
  comment: |-
    The change notification constant for the modification of a node.
    It is used in column NType of the DTreeNotify table. The value
    is 7.
-
  id: OK
  type: Property
  synopsis: 'DAPI.OK: Integer'
  comment: |-
    The status constant indicating success. Returned by DAPI
    functions to indicate that a call was completed successfully.
    The value is 0.
-
  id: OPEN_IN
  type: Property
  synopsis: 'DAPI.OPEN_IN: Integer'
  comment: |-
    A provider callback reason constant which indicates opening blob
    data for reading.
-
  id: OPEN_OUT
  type: Property
  synopsis: 'DAPI.OPEN_OUT: Integer'
  comment: |-
    A provider callback reason constant which indicates the opening
    of blob data for writing.
-
  id: PERMTYPE_ACL
  type: Property
  synopsis: 'DAPI.PERMTYPE_ACL: Integer'
  comment: |-
    The permission type enabling ACL permissions. It is used in
    column ACLType of the DTreeACL table. The value is 0.
-
  id: PERMTYPE_GROUP
  type: Property
  synopsis: 'DAPI.PERMTYPE_GROUP: Integer'
  comment: |-
    The permission type enabling group permissions. It is used in
    column ACLType of the DTreeACL table. The value is 2.
-
  id: PERMTYPE_SYSTEM
  type: Property
  synopsis: 'DAPI.PERMTYPE_SYSTEM: Integer'
  comment: |-
    The permission type enabling system permissions. It is used in
    column ACLType of the DTreeACL table. The value is 4.
-
  id: PERMTYPE_USER
  type: Property
  synopsis: 'DAPI.PERMTYPE_USER: Integer'
  comment: |-
    The permission type enabling user permissions. It is used in
    column ACLType of the DTreeACL table. The value is 1.
-
  id: PERMTYPE_WORLD
  type: Property
  synopsis: 'DAPI.PERMTYPE_WORLD: Integer'
  comment: |-
    The permission type enabling world permissions. It is used in
    column ACLType of the DTreeACL table. The value is 3.
-
  id: PERM_DELETE
  type: Property
  synopsis: 'DAPI.PERM_DELETE: Integer'
  comment: |-
    A permission level constant enabling permissions up to, and
    including, deletion. It is used in the See column of the
    DTreeACL table. The value is 4.
-
  id: PERM_SEE
  type: Property
  synopsis: 'DAPI.PERM_SEE: Integer'
  comment: |-
    A permission level constant enabling see privileges only. It is
    used in the See column of the DTreeACL table. The value is
    1.
-
  id: PERM_SEECONTENTS
  type: Property
  synopsis: 'DAPI.PERM_SEECONTENTS: Integer'
  comment: |-
    A permission level constant enabling permissions up to, and
    including, see contents privileges. It is used in the See column
    of the DTreeACL table. The value is 2.
-
  id: PERM_TO_RWD
  type: Property
  synopsis: 'DAPI.PERM_TO_RWD: Integer'
  comment: |-
    A return status constant used by the callback to change a node
    permissions in a RWD setting in a move operation.
-
  id: PERM_WRITE
  type: Property
  synopsis: 'DAPI.PERM_WRITE: Integer'
  comment: |-
    A permission level constant enabling permissions up to, and
    including, modify privileges. It is used in the See column of
    the DTreeACL table. The value is 3.
-
  id: PLATFORM_MAC
  type: Property
  synopsis: 'DAPI.PLATFORM_MAC: Integer'
  comment: |-
    The Macintosh platform. This constant is used in the platform
    attribute of a version.
-
  id: PLATFORM_MOTIF
  type: Property
  synopsis: 'DAPI.PLATFORM_MOTIF: Integer'
  comment: |-
    The UNIX platform. This constant is used in the platform
    attribute of a version.
-
  id: PLATFORM_UNKNOWN
  type: Property
  synopsis: 'DAPI.PLATFORM_UNKNOWN: Integer'
  comment: |-
    An unknown platform. This constant is used in the platform
    attribute of a version.
-
  id: PLATFORM_WINDOWS
  type: Property
  synopsis: 'DAPI.PLATFORM_WINDOWS: Integer'
  comment: |-
    The Windows platform. This constant is used in the platform
    attribute of a version.
-
  id: RESERVE_NODE
  type: Property
  synopsis: 'DAPI.RESERVE_NODE: Integer'
  comment: |-
    The default node reserved flag. The value is 128.
-
  id: SEEK
  type: Property
  synopsis: 'DAPI.SEEK: Integer'
  comment: |-
    A provider callback reason constant which indicates the setting
    of a blob data position.
-
  id: SKIP
  type: Property
  synopsis: 'DAPI.SKIP: Integer'
  comment: |-
    A return status constant used by the callback to skip a copy of a
    node in a copy operation without causing an error.
-
  id: SYSTEM_COLUMNS
  type: Property
  synopsis: 'DAPI.SYSTEM_COLUMNS: Integer'
  comment: |-
    Specify to include the system columns only. Used by
    DAPI.GetNodeColumnNames() and DAPI.GetVersionColumnNames().
-
  id: UNUSED
  type: Property
  synopsis: 'DAPI.UNUSED: Integer'
  comment: |-
    An integer value indicating that an attribute is unused. The
    value is -1. For example, if a node does not contain any
    versions, the maximum number of versions is set to unused.
-
  id: USER_COLUMNS
  type: Property
  synopsis: 'DAPI.USER_COLUMNS: Integer'
  comment: |-
    Specify to include the user columns only. Used by
    DAPI.GetNodeColumnNames() and DAPI.GetVersionColumnNames().
-
  id: VCOPY_ADDVER
  type: Property
  synopsis: 'DAPI.VCOPY_ADDVER: Integer'
  comment: |-
    A version copy option for setting the copied version's creator to
    the current user. Used by DAPI.CopyVersion().
-
  id: VCOPY_NO_USERATTS
  type: Property
  synopsis: 'DAPI.VCOPY_NO_USERATTS: Integer'
  comment: |-
    A version copy option indicating that user attributes should not
    be copied. Used by DAPI.CopyVersion().
-
  id: VCOPY_RENDITIONS
  type: Property
  synopsis: 'DAPI.VCOPY_RENDITIONS: Integer'
  comment: |-
    A version copy option to copy the renditions with the
    version.
-
  id: VCOPY_UNLOCK
  type: Property
  synopsis: 'DAPI.VCOPY_UNLOCK: Integer'
  comment: |-
    A version copy option indicating that the copied version will be
    unlocked. Used by DAPI.CopyVersion().
-
  id: VersionNotYetLoaded
  type: Property
  synopsis: 'DAPI.VersionNotYetLoaded: Integer'
  comment: |-
    A return status constant which indicates that the version's blob
    content has not yet been loaded. Used by
    $WebDoc.WebDocUtils.NodeToWeb().
-
  id: VERSION_CREATE_MAJOR
  type: Property
  synopsis: 'DAPI.VERSION_CREATE_MAJOR: Integer'
  comment: |-
    A constant to indicate the creation of a major version.  A major
    version will be created if this constant is assigned to the
    pVerMajor field of a newly allocated DAPIVERSION handler used in
    DAPI.AddVersion() and DAPI.CopyVersion().
-
  id: VERSION_GET_CURRENT
  type: Property
  synopsis: 'DAPI.VERSION_GET_CURRENT: Integer'
  comment: |-
    A constant to indicate the retrieval of the current version. It
    is used in DAPI.GetVersion() to get the current version of a
    standard versioning node or the current version (either major or
    minor) of a major and minor versioning node.
-
  id: VERSION_GET_CURRENT_MAJOR
  type: Property
  synopsis: 'DAPI.VERSION_GET_CURRENT_MAJOR: Integer'
  comment: |-
    A constant to indicate the retrieval of the current major
    version. It is used in DAPI.GetVersion() to get the current
    major version of a major and minor versioning node.
-
  id: VERSION_GET_CURRENT_PUBLISHED
  type: Property
  synopsis: 'DAPI.VERSION_GET_CURRENT_PUBLISHED: Integer'
  comment: |-
    A constant to indicate tthe retrieval of the current published
    version. It is used in DAPI.GetVersion() to get the current
    version of a standard versioning node or the current major
    version of a major and minor versioning node.
-
  id: VERSION_NOT_LOCKED
  type: Property
  synopsis: 'DAPI.VERSION_NOT_LOCKED: Integer'
  comment: |-
    The default version unlocked flag. The value is 0.
-
  id: AddAttrToCategory
  type: Method
  synopsis: 'DAPI.AddAttrToCategory(DAPISESSION session, String category, String attribute, Boolean optFlag): Integer'
  comment: |-
    Adds the specified attribute to the specified category.

    **Parameters**:
      session: The DAPISESSION object handle.
      category: The name of the category to which the attribute will
                be added. The category specified must have
                previously been created using
                DAPI.AddCategory().
      attribute: The name of the attribute to add. The attribute
                 specified must have previously been created using
                 DAPI.AddCategoryAttr().
      optFlag: TRUE to indicate that the specified attribute is
               required.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: AddCategory
  type: Method
  synopsis: 'DAPI.AddCategory(DAPISESSION session, String category, String displayName, String tableName): [Note]Integer'
  comment: |-
    Adds a new category.

    **Parameters**:
      session: The DAPISESSION object handle.
      category: The name of the new category.
      displayName: The name to display when the category is used in
                   the application.
      tableName: The name of the table in which the attribute data
                 associated with this category should be
                 stored.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: AddCategoryAttr
  type: Method
  synopsis: 'DAPI.AddCategoryAttr(DAPISESSION session, String attribute, Integer type, Integer length, [List extendList]): Integer'
  comment: |-
    Adds a new category attribute.

    **Parameters**:
      session: The DAPISESSION object handle.
      attribute: The name of the new attribute.
      type: Specifies a constant indicating the DAPI attribute data
            type. Acceptable values are: DAPI.ATTR_DATE
            DAPI.ATTR_FCHAR DAPI.ATTR_INT DAPI.ATTR_LCHAR
            DAPI.ATTR_REAL DAPI.ATTR_VCHAR
      length: An Integer indicating the length of the attribute. The
              type must be the DAPI.ATTR_FCHAR or DAPI.ATTR_VCHAR or
              it is ignored.
      extendList: Specifies an optional List of extended argument
                  values. The DAttributes table must first be
                  modified (using interactive SQL) to accept the
                  values specified in this List. The data types of
                  the values in the List must correspond to the data
                  types of the columns added to the DAttributes
                  table.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: AddNodeRight
  type: Method
  synopsis: 'DAPI.AddNodeRight(DAPINODE node, Integer rightID, Integer permissions): Integer'
  comment: |-
    Adds a user or group access right to the specified node.

    **Parameters**:
      node: The DAPINODE object handle.
      rightID: The type: Method user or group ID.
      permissions: The permissions bit mask which is one or more node
                   permission constants joined by bitwise OR
                   operators.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: AddNodeUserColumn
  type: Method
  synopsis: 'DAPI.AddNodeUserColumn(DAPISESSION sesssion, String columnName, String columnType): Integer'
  comment: |-
    Adds a new column to the DTree table.

    **Parameters**:
      session: The DAPISESSION object handle.
      columnName: The name of the new column.
      columnType: The data type of the new column.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: AddProvider
  type: Method
  synopsis: 'DAPI.AddProvider(DAPISESSION session, String provider, Boolean logical, Dynamic script, [Dynamic object]): Integer'
  comment: |-
    Adds a custom provider for blob data storage to the current
    session.

    **Parameters**:
      session: The DAPISESSION object handle.
      provider: The name of the custom provider.
      logical: TRUE to indicate non-blob storage.
      script: An OScript script reference. This script must contain
              functions to handle getting, writing, and deleting the
              blob data.
      object: The specific OSpace object of the script.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: AddRendition
  type: Method
  synopsis: 'DAPI.AddRendition(DAPIVERSION version, DAPIVERSION rendition, String provider, String localFilePath): Integer'
  comment: |-
    Adds a new rendition to the specified version.

    **Parameters**:
      version: The DAPIVERSION object handle.
      rendition: The newly allocated DAPIVERSION object handle. This
                 allows file attributes to be pre-assigned to the
                 rendition.
      provider: The name of the provider. Defaults to the provider
                set by the DAPI.SetDefaultProvider() if it is an
                empty string.
      localFilePath: The local file path of the rendition file.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: AddRenditionFromStream
  type: Method
  synopsis: 'DAPI.AddRenditionFromStream(DAPIVERSION version, String renditionType, String provider, Socket aSocket, Assoc renditionAttr): Integer'
  comment: |-
    Adds a new rendition to the specified version by getting data
    from the specified Socket object.

    **Parameters**:
      version: The DAPIVERSION object handle.
      renditionType: The name of the new rendition.
      provider: The name of the provider. Defaults to the provider
                set by the DAPI.SetDefaultProvider() if it is an
                empty string.
      aSocket: The Socket object from which the rendition contents
               are read.
      renditionAttr: An Assoc object containing the file attributes
                     of the rendition.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: AddValAsVersion
  type: Method
  synopsis: 'DAPI.AddValAsVersion(DAPINODE node, DAPIVERSION version, String provider, Dynamic value): Integer'
  comment: |-
    Adds a value as a version to the specified node.

    **Parameters**:
      node: The DAPINODE object handle.
      version: The newly allocated DAPIVERSION object handle. This
               allows file attributes to be pre-assigned to the
               version.
      provider: The name of the provider. Defaults to the provider
                set by the DAPI.SetDefaultProvider() if it is an
                empty string.
      value: The value to be store as a version. Acceptable values
             are Boolean, Date, Integer, List, Real, and String. The
             Assoc, RecArray, and Record data types are currently
             not supported.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: AddVersion
  type: Method
  synopsis: 'DAPI.AddVersion(DAPINODE node, DAPIVERSION version, String provider, String localFilePath): Integer'
  comment: |-
    Adds a version to the specified node.

    **Parameters**:
      node: The DAPINODE object handle.
      version: The newly allocated DAPIVERSION object handle. This
               allows file attributes to be pre-assigned to the
               version.
      provider: The name of the provider. Defaults to the provider
                set by the DAPI.SetDefaultProvider() if it is an
                empty string.
      localFilePath: The local file path of the file to be stored as
                     a version.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: AddVersionFromStream
  type: Method
  synopsis: 'DAPI.AddVersionFromStream(DAPINODE node, DAPIVERSION version, String provider, Socket aSocket, Assoc versionAttr): Integer'
  comment: |-
    Adds a version to the specified node by retrieving data from the
    specified Socket object.

    **Parameters**:
      node: The DAPINODE object handle.
      version: The newly allocated DAPIVERSION object handle. This
               allows file attributes to be pre-assigned to the
               version.
      provider: The name of the provider. Defaults to the provider
                set by the DAPI.SetDefaultProvider() if it is an
                empty string.
      aSocket: The Socket object from which the version contents are
               read.
      versionAttr: An Assoc object contains the file attributes of
                   the version.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: AddVersionUserColumn
  type: Method
  synopsis: 'DAPI.AddVersionUserColumn(DAPISESSION session, String columnName, String columnType): Integer'
  comment: |-
    Adds a new column to the DVersData table.

    **Parameters**:
      session: The DAPISESSION object handle.
      columnName: The name of the new column.
      columnType: The data type of the new column.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: AliasNode
  type: Method
  synopsis: 'DAPI.AliasNode(DAPINODE original, DAPINODE parent, DAPINODE new, [Boolean copyAcls]): Integer'
  comment: |-
    Creates a new node that is an alias of the specified node.

    **Parameters**:
      original: The DAPINODE object handle of the node for which an
                alias is created.
      parent: The DAPINODE object handle of the node that will be the
              parent of the new alias node.
      new: The newly allocated DAPINODE object handle. This allows
           node attributes to be pre-assigned to the node.
      copyAcls: TRUE if the the alias will inherit the access control
                list (ACL) from the parent node; FALSE otherwise.
                FALSE is the default.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: AllocNode
  type: Method
  synopsis: 'DAPI.AllocNode(DAPISESSION session): DAPINODE'
  comment: |-
    Allocates a new DAPINODE object in memory.

    **Parameters**:
      session: The DAPISESSION object handle.

    **Result**:
      The DAPINODE object handle if successful; Error otherwise.
-
  id: AllocSession
  type: Method
  synopsis: 'DAPI.AllocSession(CAPILOGIN login, [Boolean notifyChange]): DAPISESSION'
  comment: |-
    Allocates a DAPISESSION object for a login user.

    **Parameters**:
      login: The CAPILOGIN object handle specifically for the login
             user.
      notifyChange: TRUE to enable the recording of node change
                    events for text search indexing procedures,
                    FALSE otherwise.  The default is TRUE.

    **Result**:
      The DAPISESSION object handle; Error otherwise.
-
  id: AllocVersion
  type: Method
  synopsis: 'DAPI.AllocVersion(DAPISESSION session): DAPIVERSION'
  comment: |-
    Allocates a new DAPIVERSION object in memory.

    **Parameters**:
      session: The DAPISESSION object handle.

    **Result**:
      The DAPIVERSION object handle if successful; Error
      otherwise.
-
  id: Audit
  type: Method
  synopsis: 'DAPI.Audit(Dynamic nodeOrSession, String userEvent, String description): Integer'
  comment: |-
    Records a custom auditing event.

    **Parameters**:
      nodeOrSession: The DAPINODE object handle or the DAPISESSION
                     object handle.
      userEvent: A string indicating the event.
      description: A string giving a detailed description of the
                   event.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: MoveProviderData
  type: Method
  synopsis: 'DAPI.MoveProviderData(DAPIVERSION version, String providerName): Integer'
  comment: |-
    Changes the data provider storage of the specified version. Does
    not cause the version or node to be re-indexed. Does not update
    the modification date of the version or node.

    **Parameters**:
      version: The DAPIVERSION object handle.
      providerName: The name of the provider.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: CopyANode
  type: Method
  synopsis: 'DAPI.CopyANode(DAPINODE original, DAPINODE parent, DAPINODE new, [Integer options], [Integer versionNum]): Integer'
  comment: |-
    Copies a node but not its child nodes.

    **Parameters**:
      original: The DAPINODE object handle of the node to copy.
      parent: The DAPINODE object handle of the node that will be the
              parent of the copied node.
      new: The newly allocated DAPINODE object handle. This allows
           node attributes to be pre-assigned to the node.
      options: An optional flag for copy options. This flag can be
               joined by bitwise OR operators using the following
               constants: DAPI.COPY_UNRESERVE DAPI.COPY_CURRENTV
               DAPI.COPY_UNLOCKV DAPI.COPY_SPECIFICV
               DAPI.COPY_NO_VER DAPI.COPY_DST_PERMS
               DAPI.COPY_DST_CAT DAPI.COPY_NO_CAT
               DAPI.COPY_DST_USERATTS DAPI.COPY_NO_USERATTS
               DAPI.COPY_SET_CURRUSER
      versionNum: The specific version to be copied with the node.
                  Used only if the option DAPI.COPY_SPECIFICV is
                  used in options.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: CopyCategory
  type: Method
  synopsis: 'DAPI.CopyCategory(DAPINODE original, DAPINODE node): Integer'
  comment: |-
    Copies the category and attributes of one node to another.

    **Parameters**:
      original: The DAPINODE object handle of the node whose category
                attributes are to be copied.
      node: The DAPINODE object handle of the node to which the
            original node's category attributes are to be
            copied.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: CopyNode
  type: Method
  synopsis: 'DAPI.CopyNode(DAPINODE original, DAPINODE parent, [Integer options], [Dynamic newNames]): DAPINODE'
  comment: |-
    Copies a node and its child nodes.

    **Parameters**:
      original: The DAPINODE object handle of the node to copy.
      parent: The DAPINODE object handle of the node that will be the
              parent of the copied node.
      options: An optional flag for copy options. This flag can be
               joined by bitwise OR operators using the following
               constants: DAPI.COPY_A_NODE DAPI.COPY_CURRENTV
               DAPI.COPY_UNLOCKV DAPI.COPY_UNRESERVE
      newNames: An optional String indicating a name for the copied
                node, or an Assoc of multilingual names, keyed by
                language code. Defaults to the name of the original
                node if not specified.

    **Result**:
      The DAPINODE object handle of the copied node if successful;
      Error otherwise.
-
  id: CopyNodeUserAttrs
  type: Method
  synopsis: 'DAPI.CopyNodeUserAttrs(DAPINODE original, DAPINODE node): Integer'
  comment: |-
    Copies the user attributes of one node to another.

    **Parameters**:
      original: The DAPINODE object handle of the node whose user
                attributes are to be copied.
      node: The DAPINODE object handle of the node to which the
            original node's user attributes are to be copied.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: CopyVersion
  type: Method
  synopsis: 'DAPI.CopyVersion(DAPIVERSION originalVersion, DAPINODE node, DAPIVERSION newVersion, [Integer options], [String provider]): Integer'
  comment: |-
    Copies a specified version as a new version of the specified
    node.

    **Parameters**:
      originalVersion: The DAPIVERSION object handle of the version
                       to copy.
      node: The DAPINODE object handle of the node where the new
            version is stored.
      newVersion: The newly allocated DAPIVERSION object handle. This
                  allows version attributes to be pre-assigned to
                  the version.
      options: An optional flag for copy options. This flag can be
               joined by bitwise OR operators using the following
               constants: DAPI.VCOPY_ADDVER DAPI.VCOPY_NO_USERATTR
               DAPI.VCOPY_UNLOCK
      provider: The name of the provider. Defaults to the provider
                set by the DAPI.SetDefaultProvider() if it is an
                empty string.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: CopyVersionUserAttrs
  type: Method
  synopsis: 'DAPI.CopyVersionUserAttrs(DAPIVERSION original, DAPIVERSION version): Integer'
  comment: |-
    Copies the user attributes of one version to another.

    **Parameters**:
      original: The DAPIVERSION object handle of the version whose
                user attributes are to be copied.
      version: The DAPIVERSION object handle of the version to which
               the original version's user attributes are to be
               copied.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: CreateGeneration
  type: Method
  synopsis: 'DAPI.CreateGeneration(DAPINODE original, DAPINODE parent, DAPINODE new, [Boolean rootOnly], [Boolean copyAcls]): Integer'
  comment: |-
    Creates a new node that is a generation of the specified
    node.

    **Parameters**:
      original: The DAPINODE object handle of the node for which a
                new generation is created.
      parent: The DAPINODE object handle of the node that will be the
              parent of the new generation node
      new: The newly allocated DAPINODE object handle. This allows
           node attributes to be pre-assigned to the node.
      rootOnly: An optional flag where TRUE indicates that only the
                root node is to be included in the creation of
                generations. Defaults to FALSE if not
                specified.
      copyAcls: TRUE if the generation will inherit the access
                control list (ACL) from the parent node; FALSE
                otherwise. The default is FALSE

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: CreateNode
  type: Method
  synopsis: 'DAPI.CreateNode(DAPINODE new, DAPINODE parent, [Boolean copyAcls]): Integer'
  comment: |-
    Creates a new node.

    **Parameters**:
      new: The newly allocated DAPINODE object handle. This allows
           node attributes to be pre-assigned to the node.
      parent: The DAPINODE object handle of the node that will be the
              parent of the new node.
      copyAcls: TRUE if the new node will inherit the access control
                list (ACL) from the parent node; FALSE otherwise.
                The default is FALSE.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: CreateRootNode
  type: Method
  synopsis: 'DAPI.CreateRootNode(DAPINODE new): Integer'
  comment: |-
    Creates a root node for a volume.

    **Parameters**:
      new: The newly allocated DAPINODE object handle. This allows
           node attributes to be pre-assigned to the node.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: DelAttrFromCategory
  type: Method
  synopsis: 'DAPI.DelAttrFromCategory(DAPISESSION session, String category, String attribute): Integer'
  comment: |-
    Deletes an attribute from a category.

    **Parameters**:
      session: The DAPISESSION object handle.
      category: The name of the category from which the attribute is
                removed.
      attribute: The name of the attribute to delete.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: DelCategory
  type: Method
  synopsis: 'DAPI.DelCategory(DAPISESSION session, String category, Boolean dropTable): Integer'
  comment: |-
    Deletes a category.

    **Parameters**:
      session: The DAPISESSION object handle.
      category: The name of the category to delete.
      dropTable: TRUE if the associated category table should be
                 deleted upon successful deletion of the
                 category.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: DelCategoryAttr
  type: Method
  synopsis: 'DAPI.DelCategoryAttr(DAPISESSION session, String attribute, [Boolean checkUsage]): Integer'
  comment: |-
    Deletes an attributes.

    **Parameters**:
      session: The DAPISESSION object handle.
      attribute: The name of the attribute to delete.
      checkUsage: TRUE to force a check on the usage of this
                  attribute so that the function will fail if it is
                  used by any category.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: DeleteNode
  type: Method
  synopsis: 'DAPI.DeleteNode(DAPINODE node, [Integer options]): Integer'
  comment: |-
    Deletes the specified node and its child nodes.

    **Parameters**:
      node: The DAPINODE object handle of the node to delete.
      options:

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: DeleteNodeRight
  type: Method
  synopsis: 'DAPI.DeleteNodeRight(DAPINODE node, Integer rightID): Integer'
  comment: |-
    Deletes a user or group access right from the specified
    node.

    **Parameters**:
      node: The DAPINODE object handle.
      rightID: The type: Method user or group ID.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: DeleteRendition
  type: Method
  synopsis: 'DAPI.DeleteRendition(DAPIVERSION version, String renditionType): Integer'
  comment: |-
    Deletes the specified rendition of a specified version.

    **Parameters**:
      version: The DAPIVERSION object handle.
      renditionType: The type of the rendition.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: DeleteVersion
  type: Method
  synopsis: 'DAPI.DeleteVersion(DAPIVERSION version): Integer'
  comment: |-
    Deletes the specified version.

    **Parameters**:
      version: The DAPIVERSION object handle of the version to
               delete.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: FetchRendition
  type: Method
  synopsis: 'DAPI.FetchRendition(DAPIVERSION version, String renditionType, String localFilePath): Integer'
  comment: |-
    Copies the specified version rendition contents to a file on the
    local host.

    **Parameters**:
      version: The DAPIVERSION object handle.
      renditionType: The type of the rendition.
      localFilePath: The local file path to which the rendition
                     contents are copied.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: FetchRenditionRangeToStream
  type: Method
  synopsis: 'DAPI.FetchRenditionRangeToStream(DAPIVERSION version, Socket aSocket, String renditionType, List rangeData): Integer'
  comment: |-
    Writes a portion of the version rendition contents to the
    specified Socket object.

    **Parameters**:
      version: The DAPIVERSION object handle.
      aSocket: The Socket object to which the rendition contents are
               written.
      renditionType: The type of the rendition.
      rangeData: A List of two integers representing the range. The
                 first integer is the starting position and the
                 second integer is the end position.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: FetchRenditionRangesToStream
  type: Method
  synopsis: 'DAPI.FetchRenditionRangesToStream(DAPIVERSION version, Socket aSocket, String renditionType, List rangesData, String headerData): Integer'
  comment: |-
    Writes multiple portions of the version rendition contents to the
    specified Socket object.

    **Parameters**:
      version: The DAPIVERSION object handle.
      aSocket: The Socket object to which the rendition contents are
               written.
      renditionType: The type of the rendition.
      rangesData: A List of entries in which each element is a List
                  with two integers representing a range. The first
                  integer is the starting position and the second
                  integer is the end position.
      headerData: An HTML header for the specified ranges.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: FetchRenditionToStream
  type: Method
  synopsis: 'DAPI.FetchRenditionToStream(DAPIVERSION version, Socket aSocket, String renditionType): Integer'
  comment: |-
    Writes the version rendition contents to the specified
    Socket.

    **Parameters**:
      version: The DAPIVERSION object handle.
      aSocket: The Socket object to which the rendition contents are
               written.
      renditionType: The type of the rendition.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: FetchVersion
  type: Method
  synopsis: 'DAPI.FetchVersion(DAPIVERSION version, String localFilePath): Integer'
  comment: |-
    Copies the specified version contents to a file on the local
    host.

    **Parameters**:
      version: The DAPIVERSION object handle.
      localFilePath: The local file path to which the version
                     contents are copied.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: FetchVersionAsVal
  type: Method
  synopsis: 'DAPI.FetchVersionAsVal(DAPIVERSION version): Dynamic'
  comment: |-
    Retrieves the value stored as the version of a node.

    **Parameters**:
      version: The DAPIVERSION object handle.

    **Result**:
      The value stored for this version if successful; Error
      otherwise.
-
  id: FetchVersionRangeToStream
  type: Method
  synopsis: 'DAPI.FetchVersionRangeToStream(DAPIVERSION version, Socket aSocket, List rangeData): Integer'
  comment: |-
    Writes a portion of the version contents to the specified
    Socket.

    **Parameters**:
      version: The DAPIVERSION object handle.
      aSocket: The Socket object to which the version contents are
               written.
      rangeData: A List of two integers representing the range. The
                 first integer is the starting position and the
                 second integer is the end position.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: FetchVersionRangesToStream
  type: Method
  synopsis: 'DAPI.FetchVersionRangesToStream(DAPIVERSION version, Socket aSocket, List rangesData, String headerData): Integer'
  comment: |-
    Writes multiple portions of the version contents to the specified
    Socket object.

    **Parameters**:
      version: The DAPIVERSION object handle.
      aSocket: The Socket object to which the version contents are
               written.
      rangesData: A List of entries in which each element is a List
                  with two integers representing the range. The
                  first integer is the starting position and the
                  second integer is the end position.
      headerData: An HTML header for the specified ranges.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: FetchVersionToStream
  type: Method
  synopsis: 'DAPI.FetchVersionToStream(DAPIVERSION version, Socket aSocket): Integer'
  comment: |-
    Writes the version contents to the specified Socket object.

    **Parameters**:
      version: The DAPIVERSION object handle.
      aSocket: The Socket object to which the version contents are
               written.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: GetMultilingualComment
  type: Method
  synopsis: 'DAPI.GetMultilingualComment(DAPINODE node, String languageCode): String'
  comment: |-
    Gets the comment for a DAPINODE in the specified language.

    **Parameters**:
      node: The DAPINODE object handle.
      languageCode: The language code of the desired comment.

    **Result**:
      The comment if successful, an undefined value otherwise.
-
  id: GetMultilingualName
  type: Method
  synopsis: 'DAPI.GetMultilingualName(DAPINODE node, String languageCode): String'
  comment: |-
    Gets the name for a DAPINODE in the specified language.

    **Parameters**:
      node: The DAPINODE object handle.
      languageCode: The language code of the desired name.

    **Result**:
      The name if successful, an undefined value otherwise.
-
  id: GetNode
  type: Method
  synopsis: 'DAPI.GetNode(String namePath, DAPINODE startNode, [Boolean autoExpand ]): DAPINODE'
  comment: |-
    Retrieves as specified by name or relative path.

    **Parameters**:
      namePath: A String indicating the name or relative path
                (separated by colons) of the child node to retrieve
                from the specified parent node.
      startNode: The DAPINODE object handle identifying the starting
                 point parent node from which the child node is
                 retrieved.
      autoExpand: TRUE if all node attributes are fetched up front;
                  FALSE otherwise.  The default is TRUE.

    **Result**:
      The DAPINODE object handle of the retrieved node if successful;
      Error otherwise.
-
  id: GetNodeByID
  type: Method
  synopsis: 'DAPI.GetNodeByID(DAPISESSION session, Integer volumeID/nodeID, [Integer nodeID], [Boolean autoExpand]): DAPINODE'
  comment: |-
    Retrieves a node based on its unique ID.

    **Parameters**:
      session: The DAPISESSION object handle.
      volumeID/nodeID: An type: Method Integer indicating the volume ID of the
                       node or the unique node ID if the third
                       parameter is not specified
      nodeID: An type: Method Integer identifying the node ID.
      autoExpand: TRUE if all node attributes are fetched up front;
                  FALSE otherwise. The default is TRUE.

    **Result**:
      The DAPINODE object handle of the retrieved node if successful;
      Error otherwise.
-
  id: GetNodeColumnNames
  type: Method
  synopsis: 'DAPI.GetNodeColumnNames(DAPISESSION session, Integer columnType): List'
  comment: |-
    Returns a List of column names in the DTree table.

    **Parameters**:
      session: The DAPISESSION object handle.
      columnType: TRUE if the type of columns whose names will be
                  returned. DAPI.ALL_COLUMNS DAPI.SYSTEM_COLUMNS
                  DAPI.USER_COLUMNS

    **Result**:
      The List of column names if successful; Error otherwise.
-
  id: GetNodePermissions
  type: Method
  synopsis: 'DAPI.GetNodePermissions(DAPINODE node): Integer'
  comment: |-
    Returns the permissions mask that the current user has on the
    specified node.

    **Parameters**:
      node: The DAPINODE object handle.

    **Result**:
      The permissions bit mask which is one or more node permission
      constants joined by bitwise OR operators if successful; Error
      otherwise.
-
  id: GetNodeRight
  type: Method
  synopsis: 'DAPI.GetNodeRight(DAPINODE node, Integer rightID): Integer'
  comment: |-
    Returns a user or group access right for the specified node.

    **Parameters**:
      node: The DAPINODE object handle.
      rightID: The type: Method user or group ID.

    **Result**:
      The permissions bit mask which is one or more node permission
      constants joined by bitwise OR operators if successful; Error
      otherwise.
-
  id: GetNodeRights
  type: Method
  synopsis: 'DAPI.GetNodeRights(DAPINODE node): RecArray'
  comment: |-
    Returns all user or group access rights for the specified
    node.

    **Parameters**:
      node: The DAPINODE object handle.

    **Result**:
      A RecArray containing the records of the DTreeACL table if
      successful; Error otherwise.
-
  id: GetNodeUserAttr
  type: Method
  synopsis: 'DAPI.GetNodeUserAttr(DAPINODE node, String attrName, [Integer attrType]): Dynamic'
  comment: |-
    Returns a user attribute value for the specified node.

    **Parameters**:
      node: The DAPINODE object handle.
      attrName: The name of the attribute.
      attrType: An integer indicating the attribute type:
                DAPI.ATTR_SET_ALL DAPI.ATTR_SET_CAT
                DAPI.ATTR_SET_SYS The default value is
                DAPI.ATTR_SET_ALL If it is not specified.

    **Result**:
      The value for the specific attribute if successful; Error
      otherwise.
-
  id: GetOriginalNode
  type: Method
  synopsis: 'DAPI.GetOriginalNode(DAPINODE node): DAPINODE'
  comment: |-
    Retrieves the original node referenced by the specified alias or
    generation node.

    **Parameters**:
      arg1: The DAPINODE object handle of the possible alias or
            generation node.

    **Result**:
      The DAPINODE object handle of the original node if successful;
      Error otherwise.
-
  id: GetParentNode
  type: Method
  synopsis: 'DAPI.GetParentNode(DAPINODE node): DAPINODE'
  comment: |-
    Retrieves the parent node of the specified node.

    **Parameters**:
      node: The DAPINODE object handle.

    **Result**:
      The DAPINODE object handle of the parent node if successful;
      Error otherwise. Note that it returns Error if the node is a
      root node.
-
  id: GetRendition
  type: Method
  synopsis: 'DAPI.GetRendition(DAPIVERSION version, String renditionType): DAPIVERSION'
  comment: |-
    Retrieves a rendition of the specified version.

    **Parameters**:
      version: The DAPIVERSION object handle.
      renditionType: The type of the rendition.

    **Result**:
      The DAPIVERSION object handle of the retrieved rendition if
      successful; Error otherwise.
-
  id: GetVersion
  type: Method
  synopsis: 'DAPI.GetVersion(DAPINODE node, Integer versionNum): DAPIVERSION'
  comment: |-
    Retrieves a specific version of the specified node.

    **Parameters**:
      node: The DAPINODE object handle.
      versionNum: An Integer identifying which version to retrieve or
                  the following constants: DAPI.VERSION_GET_CURRENT
                  DAPI.VERSION_GET_CURRENT_MAJOR
                  DAPI.VERSION_GET_CURRENT_PUBLISHED

    **Result**:
      The DAPIVERSION object handle of the retrieved version if
      successful; Error otherwise.
-
  id: GetVersionByID
  type: Method
  synopsis: 'DAPI.GetVersionByID(Integer versionID, DAPISESSION session): DAPIVERSION'
  comment: |-
    Retrieves a version based on its unique ID.

    **Parameters**:
      versionID: An type: Method integer indicating the version ID
      session: The DAPISESSION object handle.

    **Result**:
      The DAPIVERSION object handle of the retrieved version if
      successful; Error otherwise.
-
  id: GetVersionByName
  type: Method
  synopsis: 'DAPI.GetVersionByName(DAPINODE node, String versionName): DAPIVERSION'
  comment: |-
    Retrieves a version based on the unique version name of a
    node.

    **Parameters**:
      node: The DAPINODE object handle.
      versionName: The unique name of the version.

    **Result**:
      The DAPIVERSION object handle of the retrieved version if
      successful; Error otherwise.
-
  id: GetVersionColumnNames
  type: Method
  synopsis: 'DAPI.GetVersionColumnNames(DAPISESSION session, Integer columnType): List'
  comment: |-
    Returns a List of column names in the DVersData table.

    **Parameters**:
      session: The DAPISESSION object handle.
      columnType: The type of columns whose names will be returned,
                  which should be one of the following:
                  DAPI.ALL_COLUMNS DAPI.SYSTEM_COLUMNS
                  DAPI.USER_COLUMNS

    **Result**:
      The List of column names if successful; Error otherwise.
-
  id: GetVersionUserAttr
  type: Method
  synopsis: 'DAPI.GetVersionUserAttr(DAPIVERSION version, String attrName): Dynamic'
  comment: |-
    Returns a user attribute value for the specified version.

    **Parameters**:
      version: The DAPIVERSION object handle.
      attrName: The name of the attribute.

    **Result**:
      The value for the specific attribute if successful; Error
      otherwise.
-
  id: IsInTree
  type: Method
  synopsis: 'DAPI.IsInTree(DAPINODE node, DAPINODE tree): Boolean'
  comment: |-
    Checks if a node is a descendant of another.

    **Parameters**:
      node: The DAPINODE object handle.
      tree: The DAPINODE object handle of the node which may be a
            parent of node.

    **Result**:
      A Boolean value if successful; Error otherwise.
-
  id: ListAliasNodes
  type: Method
  synopsis: 'DAPI.ListAliasNodes(DAPINODE node, [Integer permissions]): List'
  comment: |-
    Returns a List of all aliases of the specified node.

    **Parameters**:
      node: The DAPINODE object handle.
      permissions: The permissions bit mask which is one or more node
                   permission constants joined by bitwise OR
                   operators.

    **Result**:
      A List containing the DAPINODE object handles if successful;
      Error otherwise.
-
  id: ListCategories
  type: Method
  synopsis: 'DAPI.ListCategories(DAPISESSION session): RecArray'
  comment: |-
    Returns a RecArray containing information about all existing
    categories.

    **Parameters**:
      session: The DAPISESSION object handle.

    **Result**:
      A RecArray if successful; Error otherwise.
-
  id: ListCategoryAttrs
  type: Method
  synopsis: 'DAPI.ListCategoryAttrs(DAPISESSION session, [String category]): RecArray'
  comment: |-
    Returns a RecArray containing information about attributes.

    **Parameters**:
      session: The DAPISESSION object handle.
      category: An optional String indicating a category association.
                If specified, information is only returned for
                attributes associated with the specified category.
                If not included, information is returned for all
                attributes.

    **Result**:
      A RecArray if successful; Error otherwise.
-
  id: ListContents
  type: Method
  synopsis: 'DAPI.ListContents(DAPISESSION session, Integer volumeID, Integer nodeID, String viewName, [String query], [Integer permissions]): RecArray'
  comment: |-
    Returns a RecArray containing the child nodes of a specified
    node, in which each node is represented as a record.

    **Parameters**:
      session: The DAPISESSION object handle.
      volumeID: An type: Method Integer indicating the volume ID of the node.
      nodeID: An type: Method Integer identifying the node ID.
      viewName: The name of the database table or database view to
                use.
      query: An optional SQL clause to restrict the retrieval of the
             child nodes.
      permissions: An optional permissions masks to restrict the
                   retrieval of child nodes.

    **Result**:
      A RecArray, containing records of child nodes if successful;
      Error otherwise. The Record fields will vary depending upon
      the table and view name specified.
-
  id: ListGenerations
  type: Method
  synopsis: 'DAPI.ListGenerations(DAPINODE node, [Integer permissions]): List'
  comment: |-
    Returns a List of all generations of the specified node.

    **Parameters**:
      node: The DAPINODE object handle.
      permissions: The permissions bit mask which is one or more node
                   permission constants joined by bitwise OR
                   operators.

    **Result**:
      A List containing the DAPINODE object handles if successful;
      Error otherwise.
-
  id: ListGensFromRelease
  type: Method
  synopsis: 'DAPI.ListGensFromRelease(DAPINODE node, Integer major, Integer minor, [Integer permissions]): List'
  comment: |-
    Returns a List of all generations of the specified release or
    revision of a compound document.

    **Parameters**:
      node: The DAPINODE object handle.
      major: An Integer indicating the major release number.
      minor: An Integer indicating the minor release number.
      permissions: The permissions bit mask which is one or more node
                   permission constants joined by bitwise OR
                   operators.

    **Result**:
      A List containing the DAPINODE object handles if successful;
      Error otherwise.
-
  id: ListGensFromVersion
  type: Method
  synopsis: 'DAPI.ListGensFromVersion(DAPIVERSION version, [Integer permissions]): List'
  comment: |-
    Returns a List of all generations of the specified version.

    **Parameters**:
      version: The DAPIVERSION object handle.
      permissions: The permissions bit mask which is one or more node
                   permission constants joined by bitwise OR
                   operators.

    **Result**:
      A List containing the DAPINODE object handles if successful;
      Error otherwise.
-
  id: ListRenditions
  type: Method
  synopsis: 'DAPI.ListRenditions(DAPIVERSION version): List'
  comment: |-
    Returns a List of all renditions of the specified version.

    **Parameters**:
      version: The DAPIVERSION object handle.

    **Result**:
      A List containing the DAPIVERSION object handles if successful;
      Error otherwise.
-
  id: ListSubNodes
  type: Method
  synopsis: 'DAPI.ListSubNodes(DAPINODE node, [String query], [String category], [String catAttrQuery], [Boolean autoExpand], [Integer permissions]): List'
  comment: |-
    Returns a List of the child nodes of a specified node.

    **Parameters**:
      node: The DAPINODE object handle.
      query: An optional query String, phrased as the condition of a
             SQL clause, limiting which nodes are returned.
      category: An optional String identifying a category. If present
                and defined, retrieval is restricted to include only
                those nodes whose category is this specific category
                value.
      catAttrQuery: An optional String indicating an attribute query,
                    phrased as the condition of a SQL clause,
                    coupled with the category parameter, further
                    restricting the retrieval to include only those
                    nodes whose attributes contain a specific
                    value.
      autoExpand: TRUE if all node attributes are fetched up front;
                  FALSE otherwise.  FALSE is the default.
      permissions: An optional permissions mask to restrict the
                   retrieval by permission privileges.

    **Result**:
      A List containing the DAPINODE object handles if successful;
      Error otherwise.
-
  id: ListVersions
  type: Method
  synopsis: 'DAPI.ListVersions(DAPINODE node): List'
  comment: |-
    Returns a List of all versions of the specified node.

    **Parameters**:
      node: The DAPINODE object handles.

    **Result**:
      A List containing the DAPIVERSION object handles if successful;
      Error otherwise.
-
  id: LockVersion
  type: Method
  synopsis: 'DAPI.LockVersion(DAPIVERSION version, Integer lockFlag): Integer'
  comment: |-
    Locks the specified version.

    **Parameters**:
      version: The DAPIVERSION object handle.
      lockFlag: An Integer indicating the type of lock. A standard
                value to use is DAPI.LOCK_VERSION.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: MoveNode
  type: Method
  synopsis: 'DAPI.MoveNode(DAPINODE node, DAPINODE parent, [Dynamic newNames], [Boolean forceInheritPerm]): Integer'
  comment: |-
    Relocates the specified node and all its child nodes.

    **Parameters**:
      node: The DAPINODE object handle of the node to be
            relocated.
      parent: The DAPINODE object handle of the node that will be the
              parent of the moved node.
      newNames: An optional String indicating the new name for the
                moved node, or an Assoc containing multilingual
                names for the new node, keyed by language code.
      forceInheritPerm: TRUE if the moved node and its child nodes
                        will inherit permissions from the parent
                        node, otherwise the permissions of the moved
                        node and its child nodes will remain
                        unchanged.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: NextOrderingPos
  type: Method
  synopsis: 'DAPI.NextOrderingPos(DAPINODE node): Integer'
  comment: |-
    Returns the next available ordering position in a compound
    document.

    **Parameters**:
      node: The DAPINODE object handle.

    **Result**:
      The next available position (the maximum current child node
      position plus one) if successful; Error otherwise.
-
  id: NumAliasNodes
  type: Method
  synopsis: 'DAPI.NumAliasNodes(DAPINODE node): Integer'
  comment: |-
    Returns the number of aliases of the specified node.

    **Parameters**:
      node: The DAPINODE object handle.

    **Result**:
      The number of aliases if successful; Error otherwise.
-
  id: NumGenerations
  type: Method
  synopsis: 'DAPI.NumGenerations(DAPINODE node): Integer'
  comment: |-
    Returns the number of generations of the specified node.

    **Parameters**:
      node: The DAPINODE object handle.

    **Result**:
      The number of generations if successful; Error otherwise.
-
  id: NumGensFromRelease
  type: Method
  synopsis: 'DAPI.NumGensFromRelease(DAPINODE node, Integer major, Integer minor): Integer'
  comment: |-
    Returns the number of generations of the specified release or
    revision of a compound document.

    **Parameters**:
      node: The DAPINODE object handle.
      major: the major release number.
      minor: the minor release number.

    **Result**:
      The number of generations if successful; Error otherwise.
-
  id: NumGensFromVersion
  type: Method
  synopsis: 'DAPI.NumGensFromVersion(DAPIVERSION version): Integer'
  comment: |-
    Returns the number of generations of the specified version.

    **Parameters**:
      version: The DAPIVERSION object handle.

    **Result**:
      The number of generations if successful; Error otherwise.
-
  id: NumRenditions
  type: Method
  synopsis: 'DAPI.NumRenditions(DAPIVERSION version): Integer'
  comment: |-
    Returns the number of rendition types associated with a specified
    version.

    **Parameters**:
      version: The DAPIVERSION object handle.

    **Result**:
      The number of rendition types if successful; Error
      otherwise.
-
  id: NumSubNodes
  type: Method
  synopsis: 'DAPI.NumSubNodes(DAPINODE node): Integer'
  comment: |-
    Returns the number of child nodes of the specified node.

    **Parameters**:
      node: The DAPINODE object handle.

    **Result**:
      The number of child nodes if successful; Error otherwise.
-
  id: NumVersions
  type: Method
  synopsis: 'DAPI.NumVersions(DAPINODE node): Integer'
  comment: |-
    Returns the number of versions of the specified node.

    **Parameters**:
      node: The DAPINODE object handle.

    **Result**:
      The number of versions if successful; Error otherwise.
-
  id: OpenReadVerStream
  type: Method
  synopsis: 'DAPI.OpenReadVerStream(DAPIVERSION version, [Boolean resourceFork]): DAPISTREAM'
  comment: |-
    Opens a stream for reading the contents of the specified
    version.

    **Parameters**:
      version: The DAPIVERSION object handle.
      resourceFork: TRUE to read the resource fork of the version
                    contents, false to read the data fork. The
                    default is FALSE.

    **Result**:
      The DAPISTREAM object handle of the retrieved node if
      successful; Error otherwise.
-
  id: OpenWriteVerStream
  type: Method
  synopsis: 'DAPI.OpenWriteVerStream(DAPINODE node, DAPIVERSION version, Integer dataLength, String provider, [Boolean resourceFork]): DAPISTREAM'
  comment: |-
    Opens a stream for writing the contents of the specified
    version.

    **Parameters**:
      node: The DAPINODE object handle.
      version: The newly allocated DAPIVERSION object handle. This
               allows file attributes to be pre-assigned to the
               version.
      dataLen: The total length of data, in Bytes, to be
               written.
      provider: The name of the provider. Defaults to the provider
                set by the DAPI.SetDefaultProvider if it is an empty
                string.
      resourceFork: TRUE to read the resource fork of the version
                    contents, false to read the data fork. The
                    default is FALSE.

    **Result**:
      The DAPISTREAM object handle of the retrieved node if
      successful; Error otherwise.
-
  id: PurgeVersions
  type: Method
  synopsis: 'DAPI.PurgeVersions(DAPINODE node, [Integer numToKeep]): Integer'
  comment: |-
    Deletes one or more versions from the specified node.

    **Parameters**:
      node: The DAPINODE object handle.
      numToKeep: The number of versions to be retained. Versions are
                 deleted from oldest to most recent. Defaults to 1
                 if not specified.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: RefreshNode
  type: Method
  synopsis: 'DAPI.RefreshNode(DAPINODE node): Integer'
  comment: |-
    Forces a retrieval of the most recent node information from the
    database.

    **Parameters**:
      node: The DAPINODE object handle.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: RefreshVersion
  type: Method
  synopsis: 'DAPI.RefreshVersion(DAPIVERSION version): Integer'
  comment: |-
    Forces a retrieval of the most recent version information from
    the database.

    **Parameters**:
      version: The DAPIVERSION object handle.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: RenameNode
  type: Method
  synopsis: 'DAPI.RenameNode(DAPINODE node, Dynamic newNames): Integer'
  comment: |-
    Renames the specified node.

    **Parameters**:
      node: The DAPINODE object handle.
      newNames: The new name for the node as a String, or a set of
                multilingual names for the new node as an Assoc,
                keyed by language code.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: ReserveNode
  type: Method
  synopsis: 'DAPI.ReserveNode(DAPINODE node, Integer reserveFlag, [Integer userID]): Integer'
  comment: |-
    Reserves the specified node.

    **Parameters**:
      node: The DAPINODE object handle.
      reserveFlag: An Integer indicating the type of lock. The
                   standard value is DAPI.RESERVE_NODE.
      userID: The type: Method user or group ID of the user or group for whom the
              node is being reserved. The default is the current
              user if unspecified.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: SetCallback
  type: Method
  synopsis: 'DAPI.SetCallback(DAPISESSION session, Dynamic script, [Dynamic object]): Integer'
  comment: |-
    Establishes a callback script for node events.

    **Parameters**:
      session: The DAPISESSION object handle.
      script: The script to run when node events occur.
      object: The object containing the script feature.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: SetDefaultProvider
  type: Method
  synopsis: 'DAPI.SetDefaultProvider(DAPISESSION session, String provider): Integer'
  comment: |-
    Sets a default provider to use during a session.

    **Parameters**:
      session: The DAPISESSION object handle.
      provider: The name of the provider name.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: SetMultilingualComment
  type: Method
  synopsis: 'DAPI.SetMultilingualComment(DAPINODE node, String languageCode)String newValue): Integer'
  comment: |-
    Sets the comment for a DAPINODE in the specified language.

    **Parameters**:
      node: The DAPINODE object handle.
      languageCode: The language code for the comment.
      newValue: The new comment for the node.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: SetMultilingualName
  type: Method
  synopsis: 'DAPI.SetMultilingualName(DAPINODE node, String languageCode)String newValue): Integer'
  comment: |-
    Sets the name for a DAPINODE in the specified language. This
    method cannot be called after a node has been created.  To
    change a node's name after creation, use DAPI.RenameNode().

    **Parameters**:
      node: The DAPINODE object handle.
      languageCode: The language code for the name.
      newValue: The new name for the node.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: SetNodeUserAttr
  type: Method
  synopsis: 'DAPI.SetNodeUserAttr(DAPINODE node, String attrName, Dynamic value, [Integer attrType]): Integer'
  comment: |-
    Assigns a value to the specified user attribute of the specified
    node.

    **Parameters**:
      node: The DAPINODE object handle.
      attrName: The name of the attribute.
      value: The value to be assigned to the specified
             attribute.
      attrType: An integer indicating the attribute type:
                DAPI.ATTR_SET_ALL DAPI.ATTR_SET_CAT
                DAPI.ATTR_SET_SYS The default value is
                DAPI.ATTR_SET_ALL if unspecified.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: SetVersionUserAttr
  type: Method
  synopsis: 'DAPI.SetVersionUserAttr(DAPIVERSION version, String attrName, Dynamic value): Integer'
  comment: |-
    Assigns a value to the specified user attribute of the specified
    version.

    **Parameters**:
      version: The DAPIVERSION object handle.
      attrName: The name of the attribute.
      value: The value to be assigned to the specified
             attribute.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: UnlockVersion
  type: Method
  synopsis: 'DAPI.UnlockVersion(DAPIVERSION version): Integer'
  comment: |-
    Unlocks the specified version.

    **Parameters**:
      version: The DAPIVERSION object handle.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: UnreserveNode
  type: Method
  synopsis: 'DAPI.UnreserveNode(DAPINODE node): Integer'
  comment: |-
    Unreserves the specified node.

    **Parameters**:
      node: The DAPINODE object handle.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: UpdCategory
  type: Method
  synopsis: 'DAPI.UpdCategory(DAPISESSION session, Record categoryRec): Integer'
  comment: |-
    Updates a category.

    **Parameters**:
      session: The DAPISESSION object handle.
      categoryRec: A category record. The columns must compatible
                   with those in the DCategories table.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: UpdCategoryAttr
  type: Method
  synopsis: 'DAPI.UpdCategoryAttr(DAPISESSION session, Record attributeRec): Integer'
  comment: |-
    Updates an attribute.

    **Parameters**:
      session: The DAPISESSION object handle.
      attributeRec: An attribute record. The columns must compatible
                    with those in the DAttributes table.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: UpdateNode
  type: Method
  synopsis: 'DAPI.UpdateNode(DAPINODE node): Integer'
  comment: |-
    Updates modified node attributes of the specified node.

    **Parameters**:
      node: The DAPINODE object handle.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: UpdateNodeRight
  type: Method
  synopsis: 'DAPI.UpdateNodeRight(DAPINODE node, Integer rightID, Integer permissions): Integer'
  comment: |-
    Updates the user or group access right of the specified
    node.

    **Parameters**:
      node: The DAPINODE object handle.
      rightID: The type: Method user or group ID.
      permissions: The permissions bit mask which is one or more node
                   permission constants joined by bitwise OR
                   operators.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: UpdateVersion
  type: Method
  synopsis: 'DAPI.UpdateVersion(DAPIVERSION version): Integer'
  comment: |-
    Updates modified version attributes for the specified
    version.

    **Parameters**:
      version: The DAPIVERSION object handle.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: VersionFetchable
  type: Method
  synopsis: 'DAPI.VersionFetchable(DAPIVERSION version): Boolean'
  comment: |-
    Determines whether the specified version's blob content has been
    loaded.

    **Parameters**:
      version: The DAPIVERSION object handle.

    **Result**:
      TRUE if the version's content has been loaded, FALSE if it has
      not been loaded, or an Error if there was a problem
      determining fetchability.
-
  id: VerStreamClose
  type: Method
  synopsis: 'DAPI.VerStreamClose(DAPIVERSION version, DAPISTREAM stream): Integer'
  comment: |-
    Closes the specified open stream for reading or writing.

    **Parameters**:
      version: The DAPIVERSION object handle.
      stream: The DAPISTREAM object handle.

    **Result**:
      DAPI.OK (Integer 0) if successful; Error otherwise.
-
  id: VerStreamLenGet
  type: Method
  synopsis: 'DAPI.VerStreamLenGet(DAPISTREAM stream): Integer'
  comment: |-
    Returns the length of an opened version stream.

    **Parameters**:
      stream: The DAPISTREAM object handle.

    **Result**:
      The length of the opened version stream if successful; Error
      otherwise.
-
  id: VerStreamRead
  type: Method
  synopsis: 'DAPI.VerStreamRead(DAPISTREAM stream, Integer dataLen): Bytes'
  comment: |-
    Reads a portion of data from an opened version stream.

    **Parameters**:
      stream: The DAPISTREAM object handle.
      dataLen: The length of data, in Bytes, to read.

    **Result**:
      A Bytes value containing the read data if successful; Error
      otherwise.
-
  id: VerStreamWrite
  type: Method
  synopsis: 'DAPI.VerStreamWrite(DAPISTREAM stream, Bytes theBytes): Integer'
  comment: |-
    Writes a portion of data to an opened version stream.

    **Parameters**:
      stream: The DAPISTREAM object handle.
      theBytes: A Bytes value containing the data to be written to
                the version.

    **Result**:
      Number of bytes written, if successful; Error otherwise.
