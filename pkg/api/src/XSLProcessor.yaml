-
  id: Guess
  type: Method
  synopsis: 'XSLProcessor.Guess: Integer'
  comment: |-
    Output style - It will guess either XML, Fragment, HTML, or
    Text
-
  id: XML
  type: Method
  synopsis: 'XSLProcessor.XML: Integer'
  comment: |-
    XML output style.
-
  id: Fragment
  type: Method
  synopsis: 'XSLProcessor.Fragment: Integer'
  comment: |-
    XML output style without the XML declaration.
-
  id: HTML
  type: Method
  synopsis: 'XSLProcessor.HTML: Integer'
  comment: |-
    HTML output style.
-
  id: Text
  type: Method
  synopsis: 'XSLProcessor.Text: Integer'
  comment: |-
    Plain text output style.
-
  id: Message
  type: Method
  synopsis: 'XSLProcessor.Message: Integer'
  comment: |-
    Informational status or message.
-
  id: Warning
  type: Method
  synopsis: 'XSLProcessor.Warning: Integer'
  comment: |-
    Warning message.
-
  id: Error
  type: Method
  synopsis: 'XSLProcessor.Error: Integer'
  comment: |-
    Recoverable error.
-
  id: FatalError
  type: Method
  synopsis: 'XSLProcessor.FatalError: Integer'
  comment: |-
    Error that will stop processing.
-
  id: New
  type: Method
  synopsis: 'XSLProcessor.New(): XSLProcessor'
  comment: |-
    Create a new XSLProcessor instance.


    **Result**:
      A new XSLProcessor.
-
  id: Transform
  type: Method
  synopsis: 'XSLProcessor.Transform(): Assoc'
  comment: |-
    Perform the XSL transformation.


    **Result**:

-
  id: SetInput
  type: Method
  synopsis: 'XSLProcessor.SetInput(Dynamic xmlInput, [String relativeUrl]): Boolean'
  comment: |-
    Sets the input file or input DOMNode. When the xmlInput is a
    DOMNode, the relativeUrl is used to resolve any relative URIs
    found and for error reporting.

    **Parameters**:
      xmlInput: The name of the file or DOMNode.
      relativeUrl: Used for resolving relative URIs and for error
                   reporting.

    **Result**:
      True if the method succeeds, false otherwise.
-
  id: SetOutput
  type: Method
  synopsis: 'XSLProcessor.SetOutput(Dynamic xmlOutput, [Integer writeStyle]): Boolean'
  comment: |-
    Sets the output file or output DOMNode. When the xmlOutput is a
    file, the writeStyle parameter can be specified to determine the
    type of output desired (XML, XML Fragment, HTML, or Text).

    **Parameters**:
      xmlOutput: The name of a file or a DOMNode.
      writeStyle: The style of output desired.

    **Result**:
      True if the method succeeds, false otherwise.
-
  id: SetStylesheet
  type: Method
  synopsis: 'XSLProcessor.SetStylesheet(Dynamic xslInput, [String relativeUrl]): Boolean'
  comment: |-
    Sets the XSL stylesheet that will be used to perform the
    transformation.

    **Parameters**:
      xslInput: The name of a file or DOMNode.
      relativeUrl: Used for resolving relative URIs and for error
                   reporting.

    **Result**:
      True if the method succeeds, false otherwise.
-
  id: SetParameter
  type: Method
  synopsis: 'XSLProcessor.SetParameter(String name, String value): Void'
  comment: |-
    Sets the value of a parameter that will be referenced by the XSL
    stylesheet.

    **Parameters**:
      name: The name of an XSL parameter to set.
      value: The value that the parameter should be set to.
-
  id: SetEntityResolver
  type: Method
  synopsis: 'XSLProcessor.SetEntityResolver(Dynamic objref, Dynamic entryName): Void'
  comment: |-
    Sets the object reference and entry point name for the resolve
    entity callback.

    **Parameters**:
      objref: The reference to the object that has the script to be
              used in the callback.
      entryName: The script name of the callback that will be
                 executed on callback.
