-
  id: New
  type: Method
  synopsis: 'SSLOptions.New(): SSLOptions'
  comment: |-
    Returns a new SSLOptions object

    **Parameters**:
      NONE:

    **Result**:
      A new SSLOptions object or undefined if there was an error
      constructing the object.
-
  id: CertificateFileLocation
  type: Method
  synopsis: 'SSLOptions.CertificateFileLocation(): String'
  comment: |-
    No parameters.  Returns the certificate file location
    string.


    **Result**:
      Returns the certificate file location string.
-
  id: CipherList
  type: Method
  synopsis: 'SSLOptions.CipherList(): String'
  comment: |-
    No parameters.  Returns the current cipher list string.


    **Result**:
      Returns the current cipher list string.
-
  id: ClearErrorList
  type: Method
  synopsis: 'SSLOptions.ClearErrorList(): Integer'
  comment: |-
    No parameters.  Removes all errors entered by the IgnoreError()
    function.


    **Result**:
      Returns 0 for success and -1 if an error occurred.
-
  id: GetIgnoredErrorList
  type: Method
  synopsis: 'SSLOptions.GetIgnoredErrorList(): List'
  comment: |-
    No parameters.  Returns a List of Integers of the errors added
    via IgnoreError().


    **Result**:
      Returns a List of Integers of the errors added via
      IgnoreError().
-
  id: GetLastError
  type: Method
  synopsis: 'SSLOptions.GetLastError(): String'
  comment: |-
    No parameters.  Returns an error string for the last error that
    occured.


    **Result**:
      Returns an error string for the last error that occured.
-
  id: IgnoreError
  type: Method
  synopsis: 'SSLOptions.IgnoreError(Integer errorConstant): Integer'
  comment: |-
    Sets certificate verification errors to be ignored when doing an
    SSL negotiation.

    **Parameters**:
      errorConstant: Any of the SSL Error Constants above.

    **Result**:
      Returns 0 for success and -1 if an error occurred.
-
  id: PrivateKeyFileLocation
  type: Method
  synopsis: 'SSLOptions.PrivateKeyFileLocation(): String'
  comment: |-
    No parameters.  Returns the private key file location
    string.


    **Result**:
      Returns the private key file location string.
-
  id: PrivateKeyPassphrase
  type: Method
  synopsis: 'SSLOptions.PrivateKeyPassphrase(): String'
  comment: |-
    No parameters.  Returns the current private key passphrase
    string.


    **Result**:
      Returns the current private key passphrase string.
-
  id: RootCertificatesLocation
  type: Method
  synopsis: 'SSLOptions.RootCertificatesLocation(): String'
  comment: |-
    No parameters.  Returns the root certificates file location
    string.


    **Result**:
      Returns the root certificates file location string.
-
  id: SetCertificateFileLocation
  type: Method
  synopsis: 'SSLOptions.SetCertificateFileLocation(String filepath): Integer'
  comment: |-
    Sets the location of the local certificate file to be used for
    SSL negotiations.  This file may also contain the private key.
    The expected file format is PEM.

    **Parameters**:
      filepath: Fully qualified filepath to the certificate
                file.

    **Result**:
      Returns 0 for success and -1 if an error occurred.
-
  id: SetCipherList
  type: Method
  synopsis: 'SSLOptions.SetCipherList(String cipherList): Integer'
  comment: |-
    Don't mess with this unless you really know what you're doing.
    Default is "ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH".  Conforms to
    OpenSSL conventions.

    **Parameters**:
      cipherList: cipher list to use

    **Result**:
      Returns 0 for success and -1 if an error occurred.
-
  id: SetPrivateKeyFileLocation
  type: Method
  synopsis: 'SSLOptions.SetPrivateKeyFileLocation(String filepath): Integer'
  comment: |-
    Sets the location of the private key file to be used for SSL
    negotiations.

    **Parameters**:
      filepath: Fully qualified filepath to the private key
                file.

    **Result**:
      Returns 0 for success and -1 if an error occurred.
-
  id: SetPrivateKeyPassphrase
  type: Method
  synopsis: 'SSLOptions.SetPrivateKeyPassphrase(String passPhrase): Integer'
  comment: |-
    The passphrase parameter is used if your private key file is also
    password encrypted.

    **Parameters**:
      passPhrase: private key passphrase.

    **Result**:
      Returns 0 for success and -1 if an error occurred.
-
  id: SetRootCertificatesLocation
  type: Method
  synopsis: 'SSLOptions.SetRootCertificatesLocation(String filepath): Integer'
  comment: |-
    The file parameter can be either a directory where the CA
    certificates are stored or a filename of a PEM format file that
    contains the root CA certs.

    **Parameters**:
      filepath: Fully qualified filepath to the certificate file or
                fully qualified directory path.

    **Result**:
      Returns 0 for success and -1 if an error occurred.
-
  id: SetVerificationDepth
  type: Method
  synopsis: 'SSLOptions.SetVerificationDepth(Integer depth): Integer'
  comment: |-
    The depth param is a number from 1 to 9 ( the maximum depth ) for
    how deeply into the cert tree the validation will proceed.
    Default is 9.

    **Parameters**:
      depth: The depth param is a number from 1 to 9 ( the maximum
             depth ) for how deeply into the cert tree the
             validation will proceed.  Default is 9.

    **Result**:
      Returns 0 for success and -1 if an error occurred.
-
  id: SetVerificationFlag
  type: Method
  synopsis: 'SSLOptions.SetVerificationFlag(Integer flag): Integer'
  comment: |-
    The flag parameter can be either SSLOptions.VERIFY_NONE or
    SSLOptions.VERIFY_RELAXED. Default is
    SSLOptions.VERIFY_RELAXED.

    **Parameters**:
      flag: Fully qualified filepath to the certificate file or fully
            qualified directory path.

    **Result**:
      Returns 0 for success and -1 if an error occurred.
-
  id: VerificationDepth
  type: Method
  synopsis: 'SSLOptions.VerificationDepth(): Integer'
  comment: |-
    No parameters.  Returns the current verification depth or -1 if
    an error occured.


    **Result**:
      Returns the current verification depth or -1 if an error
      occured.
-
  id: VerificationFlag
  type: Method
  synopsis: 'SSLOptions.VerificationFlag(): Integer'
  comment: |-
    No parameters.  Returns the current verification flag value or -1
    if an error occurred.


    **Result**:
      Returns 0 for success and -1 if an error occurred.
